<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="observatoire.WebHome" locale="">
  <web>observatoire</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>Observatoire de la dématérialisation</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#set($displayDocTitle = false)
#set($displayTitleContentSeparator = false)


(%class='row tbd-explanationrow'%)(((
(%class='container' style="text-align: center"%)(((
(%id='document-title'%)(((
= $doc.title =
)))
Tableau de bord des démarches phares de l’Etat – Situation à juin 2019.
Afin que gouvernement, citoyens et administrations puissent suivre l’état d’avancement et la qualité de la dématérialisation, un observatoire de la dématérialisation est mis en place. Celui-ci produit un tableau de bord consultable par tous en ligne, et mis à jour tous les 3 mois afin de suivre les évolutions. Cet outil qui permet d’alimenter le débat public en données chiffrées et partagées fournit pour les 250 démarches phares des données concernant l’état d’avancement de sa dématérialisation, le respect de critères de qualité précis (qualité du support, accessibilité sur smartphone, disponibilité, temps de réponse, …) ainsi que les retours utilisateurs au travers d’un indice de satisfaction usagers. Cet indice de satisfaction est capté sur les démarche administratives en ligne elles-mêmes, grâce à un bouton « MonAvis » proposé en fin de parcours utilisateur. Ce bouton est en cours de déploiement progressif sur l’ensemble des démarches phares de l’Etat.
[[En savoir plus sur les critères de qualité&gt;&gt;Aide.Observatoire]]



)))
)))
{{html clean="false" wiki="false"}}
&lt;table id="top-demarches" class="hover" style="width:100%"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Démarche&lt;/th&gt;
      &lt;th&gt;Ministère&lt;/th&gt;
      &lt;th&gt;Peut être réalisée complètement en ligne&lt;/th&gt;
      &lt;th&gt;Identification FranceConnect&lt;/th&gt;
      &lt;th&gt;Accessibilité smartphone&lt;/th&gt;
      &lt;th&gt;Support usager de qualité&lt;/th&gt;
      &lt;th&gt;Disponibilité / temps de réponse&lt;/th&gt;
      &lt;th&gt;Indice de satisfaction usagers&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;/table&gt;
{{/html}}
{{/velocity}}
</content>
  <object>
    <name>observatoire.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>749e05e9-9dad-4c6a-9f55-1d5239c7a922</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
    paths: {
       'css': '$services.webjars.url('require-css/0.1.7/css.js')',
       'domReady': '$services.webjars.url('requirejs-domready/2.0.1/domReady.js')',
       'datatables': '$services.webjars.url('datatables/1.10.19/js/jquery.dataTables.js')',
       'datatables-css': '$services.webjars.url('datatables/1.10.19/css/jquery.dataTables.min')'
    }
});

require(['jquery', 'datatables', 'css!datatables-css', 'domReady!'], function ($) {

    function computeBadgeStyle(value) {
      value = value.toLowerCase();
      switch (value) {
        case 'oui':
          return "success";
        case 'non':
          return "danger";
        case 'partiel':
          return "warning";
        case 'expérimentation':
          return 'info';
        case 'déploiement partiel':
          return 'warning';
        default:
          return "default";
      }
    }

    function computeUrlScoreBadgeStyle(value) {
      if (isNaN(value))
        return "default";
      if (value &gt;= 7)
        return "success";
      if (value &gt;= 4 &amp;&amp; value &lt; 7)
        return "warning";
      return "danger";
    }

    function addBadge(value, badgeStyleFunction) {
      var badgeStyle = badgeStyleFunction.apply(this, [value]);
      if (value) {
        value = value.replace("n/a", "-");
        value = value.replace("n/c", "À venir");
      }
      if (value.indexOf('%') &gt; 0 || value == '-') {
        return '&lt;span class="row-details-value"&gt;' + value + '&lt;/span&gt;';
      } else {
        return '&lt;span class="row-details-value"&gt;&lt;span class="label label-' + badgeStyle + '"&gt;' + value + '&lt;/span&gt;&lt;/span&gt;';
      }
    }

    function format (data) {
      var output = '&lt;div class="row"&gt;' +
        '&lt;div class="col-md-12"&gt;' +
        '&lt;div class="row-details"&gt;' +
        '&lt;ul&gt;';
        // '&lt;li&gt;&lt;span class="row-details-key"&gt;Administration concernée : &lt;/span&gt;&lt;span class="row-details-value"&gt;' + data.direction + '&lt;/span&gt;&lt;/li&gt;' +
        //'&lt;li&gt;&lt;span class="row-details-key"&gt;&amp;hellip; intègre-t-il le questionnaire de satisfaction MonAvis ? &lt;/span&gt;' + addBadgeSpan(data.statutIntegration) + '&lt;/li&gt;' +
        var dateMiseEnLigne = data.dateMiseEnLigne.display;
        if (dateMiseEnLigne != 'Ouvert') {
          if (dateMiseEnLigne == 'n/c')
            dateMiseEnLigne = 'À venir';
          output += '&lt;li&gt;&lt;span class="row-details-key"&gt;Date d\'ouverture du service dématérialisé &lt;/span&gt;' + dateMiseEnLigne + '&lt;/li&gt;';
        }
        output = output + '&lt;li&gt;&lt;span class="row-details-key"&gt;Volumétrie totale de la démarche &lt;/span&gt;' + data.volumetrie.display + '&lt;/li&gt;';
        var pourcentage = data.pourcentageRecoursVoieDematerialisee.display;
        if (data.statutDemat != 'Non') {
          output = output + '&lt;li&gt;&lt;span class="row-details-key"&gt;Pourcentage de recours à la voie dématérialisée &lt;/span&gt;' + pourcentage + '&lt;/li&gt;';
        }
        output = output + '&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;';
      return output;
    }

    // Addition of a search function to the list of search functions for filtering on the ministère value.
    $.fn.dataTable.ext.search.push(
      function( settings, data, dataIndex ) {
        var selectedMinistere =  $('select[name="ministereSelect"]').val();
        var ministere = data[2];
        if (!selectedMinistere || selectedMinistere == "tous" || ministere == selectedMinistere) {
          return true;
        }
        return false;
      }
    );

    var ministeres = [];

    var table = $('#top-demarches').DataTable({
      ajax: {
        type: 'GET',
        url: "$xwiki.getAttachmentURL('Demarches.Code.Top', 'data.json')",
        dataSrc: function (json) {
          var data = json.data;
          for (var i = 0; i &lt; data.length; i++) {
            var ministere = data[i].ministere;
            if (ministeres.indexOf(ministere) &lt; 0) {
              ministeres.push(ministere);
            }
          };
          ministeres.sort(function (a, b) {
            return a.localeCompare(b);
          });
         return json.data;
        }
      },
      paging: false,
      columns: [
            {
              className:      'details-control',
              orderable:      false,
              data:           null,
              defaultContent: ''
            },
            {
              data: "title",
              className: 'column-title',
              render : function (data, type, row) {
                return data + '&lt;span class="ministere-groupe"&gt;' + row['ministere'] + (row['groupes'] ? (' - ' + row['groupes']) : '') + '&lt;/span&gt;';
              }
            },
            {
              data: "ministere",
              visible: false
            },
            { data: "statutDemat",
              render: function (data, type, row) {
                return addBadge(data, computeBadgeStyle);
              }
            },
            {
              data: "franceConnect",
              render: function (data, type, row) {
                return addBadge(data, computeBadgeStyle);
              }
            },
            {
              data: "adapteMobile",
              render: function (data, type, row) {
                return addBadge(data, computeBadgeStyle);
              }
            },
            {
              data: "qualiteSupport",
              render: function (data, type, row) {
                return addBadge(data, computeBadgeStyle);
              }
            },
            {
              data: "urlScore",
              type: "num",
              render: function (data, type, row) {
                console.log(data);
                if (type === "sort") {
                  return data.value;
                } else {
                  return addBadge(data.display, computeUrlScoreBadgeStyle);
                }
              }
            },
            {
              data: "satisfactionIndex",
              type: "num",
              render: function (data, type, row) {
                if (type === "sort") {
                  return data.value;
                } else {
                  return addBadge(data.display, computeBadgeStyle);
                }
              }
            }
      ],
      order: [[2, 'asc']],
      language: {
        info: "Total : _TOTAL_ démarches",
        infoEmpty: "Aucune démarche trouvée",
        infoFiltered: "(filtrage appliqué sur _MAX_ total entrées)",
        loadingRecords: "Chargement...",
        processing: "Traitement...",
        search: "Démarche :",
        zeroRecords: "Aucune entrée trouvée"
      },
      initComplete: function(settings, json ) {
        // add the ministries filter in the filters
        var filtersContainer = $('#top-demarches_filter');
        if (filtersContainer) {
          // prepare the label and select of ministries
          var ministriesLabel = $('&lt;label&gt;Ministère :&lt;/label&gt;')
          var ministriesSelect = $("&lt;select name='ministereSelect'/&gt;");
          ministriesLabel.append(ministriesSelect);
          ministriesSelect.empty();
          ministriesSelect.append($("&lt;option /&gt;").val("tous").text("Tous"));
          $.each(ministeres, function() {
             ministriesSelect.append($("&lt;option /&gt;").val(this).text(this));
          });
          // add the ministries select at the beginning of the filter line
          filtersContainer.prepend(ministriesLabel);
          // thanks, internet: https://datatables.net/forums/discussion/34352/passing-datatable-object-to-initcomplete-callback
          var this_tbl = settings.oInstance.api();
          ministriesSelect.change(function () {
            this_tbl.draw();
          });
        }
      }
    });

    $('#top-demarches tbody').on('click', 'td.details-control', function () {
      var tr = $(this).closest('tr');
      var row = table.row( tr );
      if ( row.child.isShown() ) {
        row.child.hide();
        tr.removeClass('shown');
      }
      else {
        row.child( format(row.data()) ).show();
        tr.addClass('shown');
      }
    });
});
</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>observatoire.WebHome</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>6d28fd6c-1f62-4ec3-9d95-0531465aa258</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#contentcontainerinner {
  width: 100%;
}

td.details-control {
  text-align: center;
  cursor: pointer;
  vertical-align: middle;
}

td.details-control::before {
  content: "+";
  background-color: @brand-primary;
  color: #fff;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
  width: 1.2em;
  vertical-align: top;
  border-radius: 0.1em;
}
tr.shown td.details-control::before {
  content: "-";
}


#top-demarches {
  thead th {
    vertical-align: middle;
  }

  tr.shown {
    background-color: #f6f6f6;
    td {
      border-bottom: 0.5px dotted #555;
    }
    td.details-control {
      border-bottom: none;
    }
  }

  td.details-control {
    padding-left: 0;
    padding-right: 0;
    width: 38px;
  }

  td.column-title {
    width: 38%;
    vertical-align: middle;
    .ministere-groupe {
      display: block;
      font-size: 85%;
      color: #555;
    }
  }

  /* Styles for the détails panel */
  tr.shown + tr {
    background-color: #f6f6f6;
    td {
      border-top: 0px;
      padding-top: 0px;
      padding-left: 38px;
      padding-right: 0px;
    }

    .row-details {
      font-size: 90%;
      padding-left: 10px;
      margin: 8px 0 0 0;
      .row-details-title {
        margin: 0;
        font-weight: bold;
      }
      .row-details-subtitle {
        margin: 0;
      }
      ul {
        list-style-type: none;
        margin-left: 0;
        padding-left: 0;
        display: table;
        li {
          display: table-row;
          .row-details-key, .row-details-value {
            display: table-cell;
            padding-top: 0.2em;
            padding-bottom: 0.2em;
            /* padding-right copied from the table cell of datatables */
            padding-right: 10px;
          }
          .row-details-key {

          }
        }
      }
    }
  }

  td.column-volumetrie, td.column-pourcentageRecoursVoieDematerialisee {
    text-align: right;
  }
}

#top-demarches_wrapper .dataTables_filter {
  float: none;
  text-align: center;
  margin-bottom: 1em;
  label {
    font-weight: normal;
    padding-left: 0.5em;
    padding-right: 0.5em;
  }
  input, select {
    border: 1px solid #E8E8E8;
    padding: 6px 12px;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    margin-left: 0.5em;
    display: inline-block;
  }
  input {
    min-width: 30em;
  }
  select {
    min-width: 18em;
  }
}
#top-demarches_wrapper {
  .dataTables_info {
    font-size: 90%;
    color: #888;
  }
}

table#top-demarches.no-footer {
  border-bottom: 0px;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
