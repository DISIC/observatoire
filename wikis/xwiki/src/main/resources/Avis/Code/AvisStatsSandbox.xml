<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Avis.Code.AvisStatsSandbox" locale="">
  <web>Avis.Code</web>
  <name>AvisStatsSandbox</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1537432157000</creationDate>
  <parent>xwiki:Avis.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1537449009000</date>
  <contentUpdateDate>1537449009000</contentUpdateDate>
  <version>1.1</version>
  <title>AvisStatsSandbox</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>
{{velocity}}

== Test

#set ($query = "select avg(score.value), count(*) from BaseObject as avis, IntegerProperty as score, StringProperty as demarche where avis.className = 'Avis.Code.AvisClass' and avis.id = score.id.id and score.id.name = 'score' and demarche.id.id = avis.id and demarche.id.name = 'demarche' and demarche.value = 'Demarches.317' and score.value &gt; 0")
#set ($results = $services.query.hql($query).execute())

#set ($result = $results.get(0))
$result[0]
$result[1]

== Votes
##see https://stackoverflow.com/questions/5295626/hibernate-how-to-count-with-condition
#set($results = $services.query.hql("select vote.value from BaseObject as avis, StringProperty as vote, StringProperty demarche where avis.className = 'Avis.Code.AvisClass' and avis.id = vote.id.id and vote.id.name='vote' and demarche.id.id = avis.id and demarche.id.name = 'demarche' and demarche.value = :demarche").bindValue('demarche', 'Demarches.1220').execute())

Résultats : $results

#set($results = $services.query.hql("select sum(case when vote.value='true' then 1 else 0 end) from BaseObject as avis, StringProperty as vote, StringProperty demarche where avis.className = 'Avis.Code.AvisClass' and avis.id = vote.id.id and vote.id.name='vote' and demarche.id.id = avis.id and demarche.id.name = 'demarche' and demarche.value = :demarche").bindValue('demarche', 'Demarches.1220').execute())

Somme : $results
----

== Scores

#set($results = $services.query.hql("select vote.value from BaseObject as avis, IntegerProperty as vote, StringProperty demarche where avis.className = 'Avis.Code.AvisClass' and avis.id = vote.id.id and vote.id.name='score' and demarche.id.id = avis.id and demarche.id.name = 'demarche' and demarche.value = :demarche").bindValue('demarche', 'Demarches.1220').execute())

Résultats : $results

----

== Requête complète

#set($results = $services.query.hql("select avg(score.value), sum(case when vote.value='true' then 1 else 0 end), count(*) from BaseObject as avis, IntegerProperty as score, StringProperty as vote, StringProperty demarche where avis.className = 'Avis.Code.AvisClass' and avis.id = score.id.id and score.id.name='score' and avis.id = vote.id.id and vote.id.name='vote' and demarche.id.id = avis.id and demarche.id.name = 'demarche' and demarche.value = :demarche and score.value &gt; 0").bindValue('demarche', 'Demarches.1220').execute())
#set($average = $results.get(0)[0])
#if (!$average)
  #set($average = 0)
#end
#set($votes = $results.get(0)[1])
#set($occurrences = $results.get(0)[2])


* Occurrences : $occurrences
* Moyenne : $average
* Votes : $votes

#set ($demarche = $xwiki.getDocument('Demarches.1220'))

##$services.avisStats.computeAvisStats($demarche.getDocumentReference(), $xcontext.context)

#if (false)
#set($results = $services.query.hql("select dp.value, avg(sc.value), count(*) from BaseObject as obj, IntegerProperty as sc, StringProperty dp where obj.className='Avis.Code.AvisClass' and obj.id=sc.id.id and sc.id.name='score' and dp.id.id = obj.id and dp.id.name = 'demarche' and sc.value &gt; 0 group by dp.value order by dp.value").execute())

#foreach ($result in $results)
* $result[0]
** Average: $result[1]
** Occurrences: $result[2]
#end

##$services.avisStats.computeAvisStats($xcontext.context)
#end

== Démarches n'ayant pas encore reçu d'avis

=== Démarches ayant reçu un avis

#set($results = $services.query.hql("select distinct demarche.value from BaseObject as avis, StringProperty demarche where avis.className=:avisClass and demarche.id.id = avis.id and demarche.id.name = 'demarche' order by demarche.value").bindValue('avisClass', 'Avis.Code.AvisClass').execute())
$results

=== Démarche sans avis

#set($results = $services.query.hql("select distinct doc.fullName as fullName from XWikiDocument as doc, BaseObject as obj where obj.className='Demarches.Code.DemarchesClass' and doc.fullName = obj.name and doc.fullName != 'Demarches.Code.DemarchesTemplate' and doc.fullName not in (select distinct demarche.value from BaseObject as avis, StringProperty demarche where avis.className='Avis.Code.AvisClass' and demarche.id.id = avis.id and demarche.id.name = 'demarche' order by demarche.value)").execute())

$results

{{/velocity}}</content>
</xwikidoc>
