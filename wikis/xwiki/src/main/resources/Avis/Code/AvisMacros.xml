<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Avis.Code.AvisMacros" locale="">
  <web>Avis.Code</web>
  <name>AvisMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1536755257000</creationDate>
  <parent>Avis.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1536755257000</date>
  <contentUpdateDate>1536755257000</contentUpdateDate>
  <version>1.1</version>
  <title>AvisMacros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#* - if prop type is StaticList, checks that value is in the static list
 * - if prop type is DBList, checks that the value is an existing document
 * - if prop type is number, checks nothing because the field cannot have a value that is not a number
 * NB: when no checkbox is checked, value is an empty array
 *#
#macro(validatePropertyValue $value $prop $validationMap)
  #if (!$value)
    #set ($value = '')
  #end
  #set ($validated = false)
  #if ($prop.type == 'StaticListClass')
    #set ($authorizedValues = $prop.listValues)
    ## if the property is a checkbox, the value is an array so all values have to be validated
    #if ($value.size() &amp;&amp; $value.size() &gt; 0)
      #set ($validated = true)
      #foreach ($val in $value)
        #set ($validated = $validated &amp;&amp; $authorizedValues.contains($val))
      #end
    #else
      #set ($validated = $authorizedValues.contains($value) || $value == '' || $value.size() == 0)
    #end
  #elseif ($prop.type == 'DBListClass')
    #set ($validated = $value.length() &gt; 0 &amp;&amp; $xwiki.exists($value))
  #elseif ($prop.type == 'NumberClass')
    #if ($prop.name == 'score')
      ## Validate 'score' either through empty value (it's the case when we submit a new
      ## demarche), or between 0 and 4
      #set ($validated = ("$!value" == '') || ($value &gt; 0 &amp;&amp; $value &lt; 4))
    #else
      #set ($validated = true)
    #end
  #else
    #set ($validated = true)
  #end
  #set ($validationMap[$prop.name] = $validated)
  ##* $prop.name $prop.type: $value - $authorizedValues $validated
#end

#macro(validateAvis $avisObject)
  #set ($clazz = $xwiki.getClass('Avis.Code.AvisClass'))
  #set ($validationMap = {})
  #foreach($prop in $clazz.properties)
    #set ($value = $avisObject.getProperty($prop.name).value)
    #validatePropertyValue($value $prop $validationMap)
  #end
  #set ($validated = true)
  #foreach ($value in $validationMap.values())
    #set ($validated = $validated &amp;&amp; $value)
  #end
#end
{{/velocity}}</content>
</xwikidoc>
