<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.AccountValidation" locale="">
  <web>XWiki</web>
  <name>AccountValidation</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>XWiki.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>Validation de compte</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($BYPASS_DOMAIN = 'gouv.fr')
#set ($validationKey = "$!{request.validkey}")
#set ($userId = "$!{request.xwikiname}")
#if($validationKey != '' &amp;&amp; $userId != '')
  ## Retrieve user page as script author because user pages are protected.
  #set ($userPage = $xwiki.getDocumentAsAuthor($userId))
  #set ($userObject = $userPage.getObject('XWiki.XWikiUsers'))
  #set ($userEmail = $userObject.getProperty('email').value)
  #set ($idx = $userEmail.indexOf('@'))
  #set ($domain = $userEmail.substring($idx))
  ## it's either exactly @gouv.fr or @something.gouv.fr
  #if ($domain.endsWith(".${BYPASS_DOMAIN}") || $domain.equals("@${BYPASS_DOMAIN}"))
    #if($xwiki.validateUser(true) == 0)
      #set($loginURL = $xwiki.getURL('XWiki.XWikiLogin', 'login'))
      {{info}}{{html clean="false"}}$services.localization.render('xe.admin.accountvalidation.success', [${loginURL}]){{/html}}{{/info}}
    #else
      {{warning}}{{translation key="xe.admin.accountvalidation.failure"/}}{{/warning}}
    #end
  #else
    ## Validate key manually, because we don't want to make the user active yet: it needs further validation by an administrator
    #set ($storedKey = $userObject.getProperty('validkey').value)
    #set ($validationKeyClass = $xwiki.xWiki.getClass("XWiki.XWikiUsers", $xcontext.context).get("validkey"))
    #set ($validationKey = $validationKeyClass.getEquivalentPassword($storedKey, $validationKey))
    #if ($storedKey.equals($validationKey))
      ## Send mail to administrators to let them activate the newly validated user
      ## Code reused from XWiki.ResetPassword
      #set ($mailTemplateReference = $services.model.createDocumentReference('', ['Demarches', 'Code'], 'NewUserAccountEmailTemplate'))
      #set ($from = $services.mailsender.configuration.fromAddress)
      ## The recipients are all the members of the administrator group
      #set ($administratorGroup = $xwiki.getDocumentAsAuthor('XWiki.XWikiAdminGroup'))
      #set ($administratorGroupMembers = $administratorGroup.getObjects('XWiki.XWikiGroups'))
      #set ($to = '')
      #foreach ($member in $administratorGroupMembers)
        #set ($memberId = $member.getProperty('member').value)
        #set ($memberPage = $xwiki.getDocumentAsAuthor($memberId))
        #set ($email = "$!memberPage.getObject('XWiki.XWikiUsers').getProperty('email').value")
        #set ($to = "$to$email,")
      #end
      #set ($activationUrl = $xwiki.getDocumentAsAuthor("Demarches.Admin.ActivationDeComptes").externalURL)
      #set ($userPageUrl = $userPage.externalURL)
      #set ($userName = $xwiki.getLocalUserName($userId, false))
      #set ($message = $services.mailsender.createMessage('template', $mailTemplateReference, {'from' : $from, 'to' : $to, 'language' : $xcontext.locale}))
      #set ($mailResult = $services.mailsender.send([$message], 'database'))
      #if ($services.mailsender.lastError)
        #displayError($exceptiontool.getStackTrace($services.mailsender.lastError))
      #else
        ## Send the message and wait for it to be sent or for any error to be raised.
        #set ($mailResult = $services.mailsender.send([$message], 'database'))
        ## Check for errors during the send
        #if ($services.mailsender.lastError)
          #displayError($exceptiontool.getStackTrace($services.mailsender.lastError))
        #else
          #set ($failedMailStatuses = $mailResult.statusResult.getAllErrors())
          #if ($failedMailStatuses.hasNext())
            #set ($mailStatus = $failedMailStatuses.next())
            #displayError($mailStatus.errorDescription)
          #else
            {{info}}
            $services.localization.render('wikidemarches.administration.accounts.should-be-activated-notice')
            {{/info}}
          #end
        #end
      #end
    #else
      {{warning}}{{translation key="xe.admin.accountvalidation.failure"/}}{{/warning}}
    #end
  #end
#else
  $response.sendRedirect($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI'))))
#end

#macro (displayError $text)

{{html}}
&lt;div class="xwikirenderingerror" title="Click to get more details about the error" style="cursor: pointer;"&gt;
Un probl√®me est survenu. Merci de contacter l'administrateur du site.
&lt;/div&gt;
&lt;div class="xwikirenderingerrordescription hidden"&gt;
&lt;pre&gt;${text}&lt;/pre&gt;
&lt;/div&gt;
{{/html}}

#end

{{/velocity}}</content>
</xwikidoc>
