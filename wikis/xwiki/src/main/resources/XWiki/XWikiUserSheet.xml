<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.XWikiUserSheet" locale="">
  <web>XWiki</web>
  <name>XWikiUserSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>Main.XWikiUsers</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>#set($userName="$!doc.getValue('first_name') $!doc.getValue('last_name')")#if($userName==' ')#set($userName=$doc.name)#{end}$services.localization.render('platform.core.profile.title', [$userName])</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#########################
## CSS &amp; Javascripts
#########################
#set($discard = $xwiki.ssx.use("XWiki.XWikiUserSheet"))
#set($discard = $xwiki.jsx.use("XWiki.XWikiUserSheet"))
#########################
## Setting categories
#########################
#set($categories = [])
#set($discard = $categories.add({'id':'profile', 'sheet':'XWiki.XWikiUserProfileSheet', 'glyphicon': 'user'}))
#set($discard = $categories.add({'id':'groups', 'sheet':'XWiki.XWikiUserMembershipSheet', 'glyphicon': 'group'}))
#set($isMyProfile = ($services.model.resolveDocument($xcontext.user) == $doc.documentReference))
#if($isMyProfile || $hasAdmin)
  #set($discard = $categories.add({'id':'preferences', 'sheet':'XWiki.XWikiUserPreferencesSheet', 'glyphicon': 'wrench'}))
#end
## TODO: add APIs to be able to display users watchlists to admins
#if($isMyProfile &amp;&amp; $hasWatch)
  #set($discard = $categories.add({'id':'watchlist', 'sheet':'XWiki.XWikiUserWatchListSheet', 'glyphicon': 'eye'}))
#end
#if($isMyProfile)
  #set($discard = $categories.add({'id':'network', 'sheet':'XWiki.XWikiUserNetworkSheet', 'glyphicon': 'world'}))
  ## TODO: add an enhancement system instead
  #set($notificationsSheet = $services.model.createDocumentReference('', ['XWiki', 'Notifications', 'Code'], 'XWikiUserNotificationsSheet'))
  #if ($xwiki.exists($notificationsSheet))
    #set($discard = $categories.add({'id':'notifications', 'sheet':'XWiki.Notifications.Code.XWikiUserNotificationsSheet', 'glyphicon': 'bell'}))
  #end
#end
#set($userWikiSheet = 'WikiManager.UserWikiSheet')
#if($xcontext.isMainWiki() &amp;&amp; $xwiki.exists($userWikiSheet))
  #set($discard = $categories.add({
    'id': 'wikis',
    'name': $services.localization.render('platform.wiki.menu.userwikis'),
    'sheet': $userWikiSheet,
    'glyphicon': 'list'
  }))
#end
#if($isMyProfile &amp;&amp; $hasDashboard)
  #set($discard = $categories.add({'id':'dashboard', 'sheet':'Dashboard.XWikiUserDashboardSheet', 'glyphicon': 'th'}))
#end
#########################
## Current category
#########################
#set($currentCategory = "$!request.category")
#if($currentCategory == "")
  #set($currentCategory = $categories[0].get('id'))
#end
#########################
## Creating vertical menu
#########################
#set($userMenu = [{
  'id'       : 'settings',
  'cssClass' : 'user-menu-title',
  'children' : $categories
  }
])
## Setting automaticaly url &amp; css fields of each category
#foreach($category in $userMenu)
  #foreach($subcategory in $category.get('children'))
    #set($id = $subcategory.get('id')) 
    #set($discard = $subcategory.put('url', "?category=${id}"))
    #set($discard = $subcategory.put('cssClass', "user-menu-$id category-tab"))
  #end
#end
#########################
## Display the left menu
#########################
(% id="user-menu-col" %)
(((
  ############
  ## Avatar
  ############
  (% id="avatar" %)
  (((
    #if($request.xpage == 'edituser')
      {{html clean="false"}}
        #resizedUserAvatar($doc.fullName 180)
      {{/html}}
    #else
      ## By specifying the image width we enable server side resizing. The width value we use is greater than the
      ## available space because we don't want to loose too much of the image quality (we rely on the browser to fit the
      ## image in the available space).
      {{attachmentSelector classname="XWiki.XWikiUsers" object="$obj.number" property="avatar" #if ($isMyProfile) savemode="direct" #end defaultValue="XWiki.XWikiUserSheet@noavatar.png" width="180" alternateText="$xwiki.getUserName($doc.fullName, false)" buttontext="$services.localization.render('platform.core.profile.changePhoto')" displayImage="true" filter="png,jpg,jpeg,gif"/}}
    #end
  )))
  ##########
  ## Menu
  ##########
  (% id="user-vertical-menu" %)
  (((
    #verticalNavigation($userMenu, {'translationPrefix' : 'platform.core.profile.category.', 'crtItemId' : $currentCategory, 'cssClass' : 'profile-menu'})
  )))
)))
#########################
## Display the page content
#########################
(% id="user-page-content" %)
(((
  #foreach($category in $userMenu)
    #foreach($subcategory in $category.get('children'))
      #set($tabKey = $subcategory.get('id')) 
      (% id="${tabKey}Pane" class="user-page-pane#if($tabKey != $currentCategory) hidden#end" %)
      (((
        #set($tabInclude = $subcategory.get('sheet'))
        {{include reference="${tabInclude}" /}}
      )))
    #end
  #end
)))
#########################
## END
#########################
{{html clean="false"}}
  #if($xcontext.action == 'edit' || $xcontext.action == 'inline')
    &lt;input type='hidden' name='category' value="$!{escapetool.xml($currentCategory)}" /&gt;
  #end
  &lt;div class="clearfloats"&gt;&amp;nbsp;&lt;/div&gt;
  #if($request.get('xpage'))
    &lt;script type="text/javascript"&gt;
      document.fire('lightbox:userprofile:loaded');
    &lt;/script&gt;
  #end
{{/html}}
{{/velocity}}</content>
  <attachment>
    <filename>noavatar.png</filename>
    <mimetype>image/png</mimetype>
    <author>xwiki:XWiki.Admin</author>
    <date>1544396400000</date>
    <version>1.1</version>
    <comment/>
    <content>iVBORw0KGgoAAAANSUhEUgAAAKAAAACgCAYAAACLz2ctAAAACXBIWXMAADsOAAA7DgHMtqGDAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAEtVJREFUeJzt3XmYXFWZx/HPqc6GhCUEWQYXFlFkmbCMAgqjgKOiDiOKYRkcRSUBJd1JAIMLEpBReYJJVyWggVEQ5IEgOI7LgIqCI6IoAoIroOBKQGJkkYSkq+78cSukE7vTXd1V99xbXd/n6eep7r73vL/u+3vuPfec97wn6NCPhZthV0q7YGdKO5Nsj20xFdthy/rBE/Gc+uen8Uz98+P4M1bgMcIj1B6i9CB9DzHl15y0Oou/pgiE2ALicfEU+l5Bsj9hH5Jp2A1dLQ5cxQOEe3APyZ3UbmPOX1scN5eMIQMumUr1XwiH4xUke8rP31/Dz0m+h5upfZO5f4ktKgvycgFaxMK96HoL4UiSl2v93a1ZVHE74QZ8ke6fxxbUKtrQgEteTO04TCfZK7aaJvFTwjKSZfTcH1tMM2kTA1YmUjuKMANHaJu/a0B+jEuY9HlmPh1bzGgp+IUqv4DQTfIuTImtJmP+gs/SV+H038cWM1IKasDyASSnE96GcbHVRGYtriV8ku67YotplIIZsLw34SMkxyic9ky4ido85twZW8hwKchFXLwHtY/irQqjORo1XEfX2Zx2X2wxQ5Hzi3nxFNbMI8yWzjx0GD5rST5Fck6eB7lzasD5JabMwPnSKbAOI+fP+CDdnyEkscVsTA4NuPBFdF2Cw2IraTNupXQys34ZW0h/cmTA+eOYMg9n6zxuW8VqnMuOC5hejS2G3BhwyQupXolDYysZI9xO9UTmPhBbSCm2AMrvoHqvjvmy5EC67qD3xNhCIt4BKxNJluA98TR0wJVUZzJ3VYzgkQxYeR7JdTgwTvwOGxLupPpW5jyUeeSsA7L4ldS+JM0y7pAbkkdJ3syc72cZNeM+YO9b02TLjvnyR9iO0s1Ujs8yaoYJmpV5WIrx2cXs0CDjcDRHPs2Nt2URMCMDls/DR+Vm2KfDJgh4La/fjBtvanWwFhswCWzTi/e3Nk6H5hMO4cjtOegGbmnZFF4Lc+mSQOUSnWGWInMq24wjmdmqeeQWGnBxRfuYbzm+Tbgdv6TvN0xaQddT6a+rk1k9lXG7Yg9qBxEOww7xJDeL5GTKq9DTitZb1CcrX6D4j90VJFfRdSWz7hhZE70vI7wdJyh+Vs/H6flgsxttgQEr80g+0fx2M+MPuJBJlzZv0c+CzZl4MskZ2Kk5bcYgOYPZn2xmi002YO/bCNfIxRxzw9QTOMd/iPc91ZoQS5/D6vfjLMXM+EkI/0731c1qsIkGLB+Cb2JS89rMjF8RjqX7J9mEW7QvpWV4cTbxmsoqakc0a8akSQYsv0C6XrWIMxzXM+6drbvrDcYFWzDpczg627jNIHmU0gF0/2G0LTXhUXnZJFynkOZLLmflcdmbD+Y9yY5vw6ezjz1awnZpMkll1N2IJgzDPLEELxt9O1mTLGX2KXE1TK/iVMprMSuuloY5kKQXp46mkVHeAcvvwLtH10YUrucf3hdbxHp2nEP4UmwVI+CU0SYvjKIPuHgXandbX7CxIIQHcADdT8RWsiEXTabvR9gjtpIGeZzaviPNJRzhHXD+uHSQtmjmswbH5M98pP3QcIK01EaR2IrSFVw7oryCERpwyjySg0d2blQWZjfUMhK676r3q4rGoSw/YyQnjuARvHiP+qO3aAOpf2TNSzjzb7GFbJqLJtN3H3aMraRBVmFao/ULG7wDzi9Ru1TxzAcL8m8+6kNCF8ZWMQI2w6VpFtTwadCAU2bgkMbOyQUr0rndorBmqbTKftF4FYtPauSEBgx48RRpVnMBSa4qVjXRM/+Ga2KrGBm1j7N0q+Ee3YAB156jkLMdpClVRSNcEVvByAjbsfrDwz56eIct3oPaPYq5oOhhunfKY2WoTZMEysvTC1o41mDv4byQDPMOWDtfMc0HNxfPfKSaSzfHVjFCJuC84Rw4DAMu2hdvGZ2emITbYysYBT+ILWAUTGfxPkMdNAwDloq+nDJX9fAaI/wqtoJRUKJ27jAO2hTlA/CmJgmKRDV6CbKRs7bom9K8mcq0TR0w1B1wRNMr+SLJbX3koakVWDsI6XYag7MJA1aeJ61KX3CeiJBs2iwmPBlbQRM4rp4xPyCbugPOVtw33w75YTzJaYP9chADXjaJpKEplfyy5eTYCkbOmi1iK2gO4V31pRt/xyAGfPwYbNNCRRkyrsB7yJW2jq2gSUzliQGH8gYxYJjRSjUZs1tsASNn/O6xFTSRAcu0DGDAJS9WzIyXwShains/kpfEVtBEXk3l724GAxiwerxiDzxvRO2g2ApGTiGzzgcjUDt24x8O9AienoGYDAmHN5okmQ+SgFfFVtFcwt95ayMDLtwLe2akJiu2p/xPsUU0zuIDsX1sFU1mGr0bdCs2MmBXgZMONkV4e2wFjZNE30SmNYQNPLaRAcORWUrJkBPSEmlFYcHmOC62ihaxgcf6GfDiKSQvz1pNRkxN6/MVhfGnKH5By8E4mEXPjm/2M+Da18l024asSc4oxl3wgi0IbZAEMijj6HrNum/6P4KPiCAmS3Zi/NmxRQzNZudoi9rSmyI5fN2nfgYM7TTmNAhhLpX9YqsYnEX7k3THVpEBr1z3oT4+dvEU1j6mmKV1GyTXxYnuQDvNfgxGjdpU5vy1bri1BxsT5oPkRWlhypEV02kN13ZRvcrYMB+UKB1U/wChgAO1o+JoHr44toiUJPDwp0mOiq0kYw7gWQMmQ65eakNm0HtZWmouFtd2Uf6U9tnQpwHCPqx/7I5FAyK8k22+kA59ZE1lS5Z/kTAz+9h5IL3pBRZuRteT2noMcEjur2/TcFc24RbtT9eytD86Zuljyy0C5b1xb2w1OaCP5GKe+XBawb4VPLtRzQek1QPGOKWXBnrfRPhKbCk54mGSBay9pHn1BBdszoSZOFPbDzI3QukN47BzbBk5Y0fCQiZ8iMrV1D5Pzw8bry+ThDSlKjkRx2ubNTbNpLpLoHLhUIuHOySP1gsF/YDklyQPUvvz+jXHW06m9FzCLoQ9cBC1wwpa2SpDkgXjSIpWizgCYTuSY1FPKQ/Sd7aBFtytu1EWMAk7c8IOJUK7pv10yD9TSyQFrXraoQ3YtqR9Ex875J9tSyhAkmaHNmXzks6AaId4TOgYsENMJnYM2CEmE8dIEmqHvFKS7unQoUMMnukYsENMOgbsEJU1JRS4iHeHgvNUiaSI24J2aA8eKxEei62iw5jlsRI6BuwQi8fGER5Zn8PWoc7T+AXuJ/k94fckvyX8Jf2qrmTiav62Zn3a/vwS29U3an5mK2xTT3XbnvB8PJ9kZ8JL8UKdhEEkj46j9tAY/188iTtwO35I7Sc8/hDza401M7+GlfVvVuKhwY+9aDLVPXEAyYF4ubSY+hi7EKUHA5U3knw1tpQM6SPcim/hJnb4EdOrsUVReS61wykdQfJa6V2y3TkypHWhu34aW0mLWUVyA+FLVL/G3L/EFjQ0lf1Ijk5L2iZ7xVbTGkovbeeF6QluxRVM+gIzH48taOQs2pfSf+AE7VO4vI8wud7nKP9CoTd02YAncA3VCnN/FltMc7m2i+VvqNcQPEKh+4zhZ3TvXS/ME+4lKboBf0tyIeMv531tOrszvYqvpF+VaSRnSlfqRSywNFKSe1lfHavIpTnuJ5zEpN2ZvaR9zbcx3T+h50RqL8ElWBtbUWNsYEA/jqhkpPyJcAor96T7cmYW7AI0izm/oWdmOr6YXI0Gh49iEe6kmCV6VxE+wcQLmfl0bDH5o7IfSUW+N5ysMmkqMx/v14mt/LQAr/tfpdTNrAdjC8k3SaD8dsIF8lkM6W569mODO17yvVhqhsFyvIWef+2YbziEhNlXUHspLoutZgBuW/ehvwG/HUPJMLiKrr3p+e/YQorHnL/S8y5Kb8AfYqtZz3qv9TPghG+gL4KawXiScGL6pndaJ2dxVMy6gUl7E5bFVoI+Nrtp3Tf9DPjelfhhBEEDkNxB2I/uq2IraR9mPk73cTgNqyMKua3/rNTGu2XekLWaAbiM0iF0/zq2kPak5yKSf8YfIwnYwGMbG/C6LJVsRB/hrLTP0v1MRB1jgNk/Sp8w4ZYIwa/v/80Ac4nle7F3RmLW8RTJMcz+esZxxziVifhcvfhmFjw7/LKOAQaeM++oPoJXd8wXg+5nmHU8zs0mXrhm458MYMBkmUxz9MM59BRxKrBNCAkrz8MvWxwoIVy78Q8HMGDP/fhui8X0IzmfRZ061VHZ5kytT8f79kCTCIPM/SaXtlhMf7aldHk6fdQhexbtT3JeBoH+a6AfDmLAra5Dlmnrr2XxrAzjdUC6OKp0ldaX6FtBGHAmaxADnrQan22hoAFILmTxK4c+rkNzSALVz8omE/4zgw2tbSL9qtor28JF46ldx8KdMow5hqmcTvK2DAKtJSwe7JebMODcP+ILLRC0KXag65r6+FSHlrH4cHw8m1jharoHTYQYIgE1fFL2ZRMOIfls56WkVSzci9r1sllHkhAu3NQBQxiw+y58uYmChssJVP4zQtw2Z9GOdH0NW2cU8HpmbXK90TBS8JOPiLPO4AP0vjdC3DZl0daU/ld2FRdqVOcPddAwDDj7HkRKUghLqIzRLe2byYLNKX0Z+2YY9OrhrMse5iKkrrPFKeUb0l3My2+PELtNWLA5E27EoRkGfSadYh2aYRrwtPuwZBSCRkMJl1F5Z6T4BWbpVky4QeYr5JLe4eZzNrAMM5wrXRwUg670zbj8/kjxC0jv9qy+WbZ3PniE0seGe3ADBux+AmePQFCzCLiA8gWdIZqhqOxG+B72G/LQ5jOv7pVh0eCFTALlmwiHN6qqyXyNcEIjf+jYoXJoOqMUtss+driFWYenKV7Do8FKCCFh3KlY1dh5TeeNJLeyeJfIOnJGeQbJt+KYzyr6Tm7EfIyoFMdp9+GjjZ/XdPah9iN6j4otJD4XbEH5CizF+EgiPsLcBxo9aYR9qfklpnwbrxrZ+U3nSiadMjZrxZQPwNXYPaKI77LjYSMpdTyKzvyinSndja1G3kZT+Snh3XTnZG1zq1k6ntVn4cPibrm7kr5pnP77kZw8yrfJ3hMJV46ujaZSxRLWfGj99gntSO+BhEuxT2wlOJaev1vrMVyaMJxRXooZo2+nqfwWZ9G9rNFOcb7p3R7nEt4jFzW9wxK6R5XJ3gQDLh3PqpsJOcxmTu6gdAbd34mtZHQsfQ7PzCL5ILaMrabOD1j5KuaPaoq2SQO6n3w+XXdEev0fDt+g9nHm3BJbSGNUtsSpJHPkqzr+ckoHMOtPo22oiTMKiw6m9C1s1rw2m034PhYy8X/yXdK3/ALCTJL3yi53b7g8TTisWS97TZ7SqhxTX9ie91K/j5BcTvhMfR10Dpg/gSlvJDmZ8Dr5/B/WcEwzazW2YE61fAYWNL/dlnEXrqf2Reb8ItvQl03iidfVd0M6Sv7udhsR5tDd29QWm9nYesofwwda03ZL+S3hOyS34Fa6H2juW/RFk1m7P6VXk7waB8l1l6U/yfnMbnoySguzSsoVFH2x+VP4GX5CeIDaw/gdHkm3N+taxaN/S98EK1syrovq1vRtRXgepZ1Ino898Y/YVTF3NyrTM7sVDbfwn5EEFi9N+zQdCswldJ/SqvHUFnZ0Q8KsmVjUuhgdWsxFrDy1lYP5GT0OyvMxrDUCHfJCcgGzz2p1lIymc268hdc/RXiNYvaBxhI1wlx6zs8iWMZmKB+Nz+M52cbtMExWk7yT2ZlVyY1wN1p0cLpzeW6n7cYqywn/lnU6W4TR9jnfp7Z/fVqsQy5I7sCBMXIpI6X0fP1JDvwckyYS8ryr41jgEv56DGdlWZD0WXLwQlA5nuRT8pNZPVZYiVNGk0zaDHJgQNLsD1fin2MrGRuE71M9Md3sOi45ybjo+R07Hp7ulBR9yWc78zTOZIdD82A+cnMH7M+iXSktxWtiK2kz/o9kBrN/FVtIf3JoQOrzyCelWcyd4ZpRspxkHj1X5nF9TE4NuI4FmzPhTJyFTt3oxlibvtyVzs5zCZOcG3Ad5d1xHqbLTb81t9RwDeEjRdjytiAGXEdlT8xPd9YsmvaWk+Br1M5mzt2xxQyXgl7EyjSS03GceLVQ8sKadBfKcOFQBcHzSEENuI7K86h1E96FqbHVZMwKfIZqpb6nSyEpuAHXUZlI7SjCDByhbf6uAfkxLmHS59uhGFMbXqjKbtSOJUzHtNhqmsTdWEZp2UBbnhaZNjRgf3pfki55dCQOls3uQM2gD9/DjXR9sV6TsS1pcwP2Z9HWdL2G5DBp1fi95WdIpypdffddkpvZ7CZmPh5bVBaMIQNuzNKtWPMKqvsRpkkN+WKtv0v24T7CvdTuIdxJuC3Pg8WtZAwbcCAqE6nuyridqe6CnQk7SN+wp2JbafWCknT4Z3L9xKewVrqeYiXJCulb6gqS5ZQeJDyEB1nxm9FWlGon/h8RZn7th1sAcwAAAABJRU5ErkJggg==</content>
    <filesize>4936</filesize>
  </attachment>
  <object>
    <name>XWiki.XWikiUserSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>4a317e5c-a75e-4dec-aad0-1f80ffde5124</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
// Start XWiki augmentation.
Object.extend(XWiki, {
  userprofile : {
    init : function() {
      this.crtCategory = '';
      this.tabsContainer = $('user-vertical-menu');
      if (!this.tabsContainer) {
        return;
      }
      this.tabsContainer.select('.category-tab').each(function (tabElement) {
        tabElement.observe('click', function(event) {
          Event.stop(event);
          this.switchTab(tabElement.id, true);
        }.bindAsEventListener(this));
      }.bind(this));
      this.tabsContainer.select('.category-tab.current').each(function (activeTab) {
        this.updateCategoryFields(activeTab.id);
        document.fire('xwiki:profile:switchedCategory', {'category' : activeTab.id});
      }.bind(this));
      this.handleCancelAction();

      // History navigation through our pushed states.
      window.addEventListener('popstate', function(event) {
        if (event.state &amp;&amp; event.state.category) {
          this.switchTab('vertical-menu-' + event.state.category);
        }
      }.bindAsEventListener(this));
      // Store the initial history state so we can go back.
      history.replaceState({
        category: window.location.search.toQueryParams().category || 'profile'
      }, document.title, document.location.href);
    },

    switchTab : function(tab, pushHistory) {
      var tabName = tab.substring(14); // 14 = len('vertical-menu-')
      $("user-page-content").select("div.user-page-pane").each(function(pane){
        pane.addClassName('hidden');
      });
      $(tabName + 'Pane').removeClassName('hidden');
      $("user-vertical-menu").select("span.category-tab").each(function(tab){
        tab.removeClassName('current');
      });
      $(tab).addClassName('current');
      this.updateCategoryFields(tab);
      if (pushHistory) {
        this.updateURL(tabName);
      }
      document.fire('xwiki:profile:switchedCategory', {'category' : tab});
    },

    updateCategoryFields : function (category) {
      category = category.substring(14); // 14 = len('vertical-menu-')
      this.crtCategory = category;
      this.updateField('xredirect', XWiki.currentDocument.getURL('view', 'category=' + category));
      this.updateField('xcontinue', XWiki.currentDocument.getURL('edit', 'editor=inline&amp;category=' + category));
      this.updateField('category', category);
    },

    updateURL : function (category) {
      if (history.pushState) {
        var params = window.location.search.toQueryParams();
        params.category = category;
        newQueryString = Object.toQueryString(params);

        var newURL = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + newQueryString;
        window.history.pushState({category : category}, '', newURL);
      }
    },

    updateField : function (fieldName, value) {
      var element = $$('input[name=' + fieldName + ']');
      if (element &amp;&amp; element.size() &gt; 0) {
        element[0].value = value;
      }
    },

    handleCancelAction : function() {
      var elements = $$('form .buttons input[type=submit][name=action_cancel]');
      if (elements &amp;&amp; elements.size() &gt; 0) {
        var button = elements[0];
        Event.stopObserving(button, 'click');
        button.observe('click', function(event){
          event.stop();
          window.location = XWiki.currentDocument.getURL('view', 'category=' + this.crtCategory)
        }.bindAsEventListener(this));
      }
    }
  }
});

var init = function() {
  XWiki.userprofile.init();
  return true;
};
(XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);
document.observe('lightbox:userprofile:loaded', init);
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>userprofile</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.XWikiUserSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>30c9f7e7-0b53-468b-a254-645d035d9416</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template("colorThemeInit.vm")
#set($tabswidth = "130px")
/* ----- User menu ----- */
#user-menu-col{
  float: left;
  width: 13em;
}

#avatar p {
  text-align: center;
}

#avatar img {
  border: 1px solid $theme.borderColor;
  border-radius: 5px 5px 5px 5px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
  margin: 0 auto;
  padding: 0.3em;
  width: 95%;
}

.profile-menu .category-tab:before{
  float: left;
  margin: 5px 0 0 5px;
}

.profile-menu .user-menu-profile:before{
  content: url("$xwiki.getSkinFile('icons/silk/vcard.png')");
}

.profile-menu .user-menu-preferences:before{
  content: url("$xwiki.getSkinFile('icons/silk/wrench.png')");
}

.profile-menu .user-menu-watchlist:before{
  content: url("$xwiki.getSkinFile('icons/silk/star.png')");
}

.profile-menu .user-menu-network:before{
  content: url("$xwiki.getSkinFile('icons/silk/group.png')");
}

.profile-menu .user-menu-dashboard:before{
  content: url("$xwiki.getSkinFile('icons/silk/application_view_tile.png')");
}

.profile-menu .user-menu-wikis:before{
  content: url("$xwiki.getSkinFile('icons/silk/chart_organisation.png')");
}

.skin-colibri .profile-menu .group.user-menu-title{
  #set ($menuIcon = "url(${escapetool.S}$xwiki.getSkinFile('icons/silk/user.png')${escapetool.S})")
  #css3_backgroundIconAndLinearGradient($menuIcon, {
    'to': 'bottom',
    'colors': [
      {'color':$theme.menuContentGradientColor,    'position': '0%'},
      {'color':$theme.menuContentBackgroundColor, 'position': '100%'}
    ]
  })  
}

.profile-menu .group, .profile-menu .group:hover {
  background-position: 7px 50%,top center;
}

.user-menu-title a:hover{
  color: $theme.panelHeaderTextColor !important;
}

/* ----- Page content ---- */
#user-page-content{
  margin-left: 14em;
}

.column h1 {
  font-weight:bold;
  font-size:115%;
  margin:10px 0;
}

.column h2 {
  font-size: 110%;
}

/* For columns that don't adapt well to limited width. */
.column.min-half {
  min-width: 49.9%;
}

div.profile-section,
div.userInfo, div.userRecentChanges, div.userPreferences, div.passwordManagement, div.watchlistManagement, div.watchlistRss, div.watchlistElements, 
div.userDashboard, #dashboardPane .dashboard {
  margin: 5px 10px 10px;
  padding: 5px 10px 10px;
}

/* ----- Profile ----- */
td.recentChangesLeft, .recentChangesMoreActions {
  display:none;
}

td.recentChangesRight {
  padding: 0 !important;
}

div.profile-section,
div.userInfo, div.userRecentChanges, div.userPreferences, div.passwordManagement, div.watchlistManagement, div.watchlistRss, div.watchlistElements, 
div.userDashboard, #dashboardPane .dashboard {
  margin: 5px 10px 10px;
  padding: 5px 10px 10px;
}

div.highlighted-profile-section,
div.userInfo, div.userPreferences, div.watchlistManagement, div.userDashboard {
  background-color: $theme.backgroundSecondaryColor;
}

.userInfo {
  -ms-word-break: break-all; /* IE8, IE9 */
}

.userInfo a {
  word-wrap: break-word;
}

.userInfo img {
  max-width: 100%;
}

div.userInfo input[type="text"], div.userInfo input[type="password"], div.userInfo textarea, div.userInfo select, div.userPreferences select {
  width: 100%;
}

div.editProfileCategory {
  float:right;
}

div.editProfileCategory a {
  display:block;
  width: 16px;
  height: 16px;
  background: url("$xwiki.getSkinFile('icons/silk/pencil.png')") no-repeat;
}

/* Watchlist */

#watchlistRssLink {
  background: url("$xwiki.getSkinFile('icons/xwiki/rss-medium.png')") no-repeat;
  padding-left: 18px;
  font-weight: bold;
}

span#avatarUpload {
  display:block;
  width:$tabswidth;
  position:absolute;
  font-size: 10px;
  font-weight: bold;
  background-color: white;
}



## --------------------------------------
## Network sections style
#networkPane .following ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
#networkPane .following li {
  padding: 2px 20px 2px 2px;
}
#networkPane .following li:hover {
  background-color: $theme.highlightColor;
}
#networkPane .following img {
  float: left;
  margin-right: 5px;
}
#networkPane .following .user-info {
  float: left;
}
#networkPane .following .user-id {
  font-size: .8em;
  font-weight: 900;
}
#networkPane .following .unfollow {
  float: right;
  margin-right: -16px;
  padding: 0;
}
## --------------------------------------
## Picker style
.attachment-picker {
  position: relative;
  margin: auto;
  width: 100%;
}
.attachment-picker p {
  padding: 0;
  margin: 0;
}

.attachment-picker .picture {
  z-index: -1;
}
.attachment-picker .buttonwrapper {
  margin: 0;
}

.attachment-picker-start {
  background: url("$xwiki.getSkinFile('icons/silk/picture_edit.png')") no-repeat center center $theme.pageContentBackgroundColor !important;
  border: 0 none !important;
  border-bottom-left-radius: 8px;
  height: 18px;
  position: absolute;
  right: 0;
  text-align: left;
  text-indent: -9999px;
  top: 1px;
  width: 18px !important;
  z-index: 1;
}

## --------------------------------------
## Dashboard
/* prevent the clearfloats between buttons &amp; dashboard gadgets from clearing the tabs as well, only the buttons float */
.dashboard .clearfloats, 
.dashboard .clearfloats:after, .dashboard .clearfloats:before {
  clear: right;
}</code>
    </property>
    <property>
      <name>userprofile</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
