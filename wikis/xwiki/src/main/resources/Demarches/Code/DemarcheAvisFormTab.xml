<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarcheAvisFormTab" locale="">
  <web>Demarches.Code</web>
  <name>DemarcheAvisFormTab</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>xwiki:Demarches.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>DemarcheAvisFormTab</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## Import DSFR core styles
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/core/core.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/core/core.legacy.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/scheme/scheme.min.css'))
## Import DSFR components styles used in the page
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/alert/alert.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/alert/alert.legacy.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/form/form.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/form/form.legacy.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/button/button.min.css'))
#set ($discard = $xwiki.ssfx.use('uicomponents/dsfr-scoped/component/button/button.legacy.min.css'))
## Fix style conflicts and issues
#set ($discard = $xwiki.ssx.use('Demarches.Code.DemarcheAvisFormTab'))
## Import custom form jsx
#set ($discard = $xwiki.jsx.use('Demarches.Code.DemarcheAvisFormTab'))
{{html wiki="true"}}
#maybeSetWarningBackground()
&lt;div class="tab-pane fade #if($selectedTab == 'avis-tab')active in#end use-dsfr" id="avis-tab" #if(!$isSingleTab)role="tabpanel" aria-labelledby="avis-tab"#end&gt;
#set ($step = "$!request.session.getAttribute('avis-form-step')")

## This is a multi-steps form. The following exclusive and successive steps can happen:
## - Initial step (key: "initial-step") with or without the modality 'demarche-newly-submitted-by-current-user'
## - Second screen (key: "second-form-screen")
## - Third form screen (key: "third-form-screen")
## - Final step (key: "final-step")
#if ($step == '')
  ## Initialize the step variable for the sake for clarity (i.e. do not leave the initial step empty).
  #set ($step = 'initial-step')
#end
#if ($step != 'initial-step')
  ## The step is not the initial one, hence we:
  ## - The step gets cleaned from the session.
  #set ($discard = $request.session.removeAttribute('avis-form-step'))
  #if ($step == 'final-step')
    ## At this step only, we remove the avis identifier from the session: we consider that the avis has been submitted and
    ## that any new form submission will result in a new avis.
    #set ($discard = $request.session.removeAttribute($avisIdAttributeKey))
  #end
#else
  #maybeDisplayStatusWarning()
#end

#if ($step != "final-step")
  ## The step is not the last one: we display a form for submitting / completing an avis.
  #set ($demarche = $doc.getObject('Demarches.Code.DemarchesClass'))
  #if ($demarche != $NULL)
    &lt;form action="$xwiki.getDocument('Avis.Code.AvisHandler').getURL()" method="POST" class="xform wd-form avis-form"&gt;
    #if ($step == 'initial-step')
      ## The first step of the form gets displayed, either for an existing demarche, or for a demarche that got just submitted by the current user.
      &lt;div class='form-preambule'&gt;
      ==$services.localization.render('avis.form.demarchename.label') (%class='form-demarchename'%)${doc.title}(%%)==
      &lt;/div&gt;
      #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
      #set ($presetModalite = "$!request.nd_mode")
      #if ($presetModalite == '')
        ## We don't have a preset modalite received from request parameters, hence we display the 'modalite' question
        #setDefaultModalite($avis)
        &lt;div class="modalite"&gt;
          #displayObjectForm($avis,['modalite'])
        &lt;/div&gt;
      #else
        #if ($presetModalite != '')
          ## a preset modalite was received on the request, use that modalite
          #set ($modalite = $presetModalite)
        #else
          ## The user has just submitted a new demarche, hence we retrieve the 'modalite' value from the session, and we clean the session from this point of view.
          #set ($modalite = $request.session.getAttribute('avis-modalite'))
          #set ($discard = $request.session.removeAttribute('avis-modalite'))
        #end
        &lt;input type="hidden" name="Avis.Code.AvisClass_0_modalite" value="$escapetool.xml($modalite)" /&gt;
      #end
      &lt;div class="rating-container"&gt;
        #displayObjectForm($avis,['score'])
      &lt;/div&gt;
      &lt;div class="vote-container"&gt;
        #displayObjectForm($avis,['vote'])
      &lt;/div&gt;
      &lt;div class="vote-input-container"&gt;
        #displayObjectForm($avis,['voteInput'])
      &lt;/div&gt;
      ## set the source of this avis, only in the first step.
      ## TODO: We'll need to figure out how to handle this properly when implementing the API / Embed, to make sure that no avis remains without source
      #set($avissource = "$!request.nd_source")
      &lt;input type="hidden" name="Avis.Code.AvisClass_0_source" value="$escapetool.xml($avissource)" /&gt;
    #elseif ($step == 'second-form-screen')
      #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
      &lt;div class="eval-container"&gt;
        #displayObjectForm($avis,['facile','comprehensible','difficultes','autreDifficulte','aide', 'autreAide','autre'])
      &lt;/div&gt;
    #elseif ($step == 'third-form-screen')
      #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
      &lt;div class="email-container"&gt;
        #displayObjectForm($avis,['email'])
      &lt;/div&gt;
    #end
    ## If we're handling a validated demarche, the avis gets associated to it.
    &lt;input type="hidden" name="Avis.Code.AvisClass_0_demarche" value="$doc.fullName" /&gt;
    ## In the first step, an API key is supposed to be present and valid. We pass it to the avis handler
    ## so that it gets checked and, if valid, stored into the avis object. In the subsequent steps, the API key
    ## is not present anymore in the request, hence we don't add the apiKey input, otherwise
    ## it would override the existing property with an empty value.
    #if ($providedDemarcheEmbedApiKeyIsValid)
      &lt;input type="hidden" name="Avis.Code.AvisClass_0_apiKey" value="$!request.key" /&gt;
    #end
    &lt;input type="hidden" name="xredirect" value="$doc.getURL()?tab=avis-tab" /&gt;
    &lt;input type="hidden" name="avis-form-step" value="$step" /&gt;
    #if ($step == 'initial-step')
      #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.validate')))
    #elseif ($step == 'second-form-screen')
      #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.send')))
    #elseif ($step == 'third-form-screen')
      #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.complete')))
    #end
    &lt;button class="fr-btn fr-mt-6v" type="submit" name="submit" disabled&gt;$submitLabel&lt;/button&gt;
    &lt;/form&gt;
  #end
#else
  {{html clean="false"}}
    &lt;div class="fr-mb-10v fr-mb-md-16v"&gt;
      &lt;div role="alert" class="fr-alert fr-alert--success fr-alert--sm"&gt;
          &lt;p&gt;$services.localization.render('avis.form.final-step.confirmation')&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  {{/html}}
  (%class="form-final-step-information"%)(((
    {{display reference='Demarches.Code.DemarcheAvisFormTab_Step3' /}}
  )))
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarcheAvisFormTab</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>89796d99-d279-488e-a255-b9cf698b0855</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  'use strict';

  /** Avis functions */
  function updateVoteAndSubmitButton() {
    var modalite = $("input[name='Avis.Code.AvisClass_0_modalite']:checked").val();
    //The "modalite" checkbox can be inexistent in case the form is displayed after a new demarche got submitted by the current user.
    if (!modalite) {
      modalite = $("input[name='Avis.Code.AvisClass_0_modalite']").val();
    }

    var score = $("input[name='Avis.Code.AvisClass_0_score']:checked").val();
    if (score) {
      if (modalite == 'autrement') {
        $('.vote-container').show();
      } else {
        $('.vote-container').hide();
      }
      $('button[type="submit"]').prop('disabled', false);
    }

    var vote = $("input[name='Avis.Code.AvisClass_0_vote']:checked").val();
    if (vote &amp;&amp; vote == 'true' &amp;&amp; modalite == 'autrement') {
      $('.vote-input-container').show();
    } else {
      $('.vote-input-container').hide();
    }
  }

  function updateEvaluationInputsVisibility() {
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "second-form-screen") {
      $('.eval-container').show();
      $('button[type="submit"]').prop('disabled', false);
    }
  }

  function showHideFreeTextInputField(inputElement, propName, freeTextInputFieldId) {
    var value = inputElement.val();
    var checked = inputElement.prop("checked");
    if (value == propName) {
      if (checked) {
        $("#" + freeTextInputFieldId + "-container").show();
      } else {
        // Make sure to empty the input before hiding it, so that only an empty
        // value gets sent to the server, no value that the user may have entered
        // before hiding the input.
        $("#" + freeTextInputFieldId).val("");
        $("#" + freeTextInputFieldId + "-container").hide();
      }
    }
  }

  $(document).ready(function() {
    $("input[name='Avis.Code.AvisClass_0_modalite']").change(function() {
      updateVoteAndSubmitButton();
    });

    $("input[name='Avis.Code.AvisClass_0_score']").change(function() {
      updateVoteAndSubmitButton();
    });

    $("input[name='Avis.Code.AvisClass_0_vote']").change(function() {
      updateVoteAndSubmitButton();
    });

    // Add an input field allowing the user to enter free text about
    // a difficulty he may have faced when the 'autre difficulté' is checked.
    $("input[name='Avis.Code.AvisClass_0_difficultes']").change(function() {
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreDifficulte-0");
    });

    // Same for 'autre aide'
    $("input[name='Avis.Code.AvisClass_0_aide']").change(function() {
      // Uncheck the 'Aucune aide' checkbox.
      $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreAide-0");
    });

    // Uncheck all other options when 'aucune aide' is checked
    $("input[id='xwiki-form-aide-0-aucune']").change(function() {
      var input = $(this);
      var checked = input.prop("checked");
      if (checked) {
        // Uncheck all other options
        $("input[name='Avis.Code.AvisClass_0_aide']").each(function() {
           var input = $(this);
           var value = input.val();
           input.prop("checked", false);
           // Hide explicitely the "autreAide" field
           // NB: this is not done automatically despite the listener above because
           // the input for 'aucune aide' has no name (as we don't want to store its value
           // in the database).
           $("#xwiki-form-autreAide-0").val("");
           $("#xwiki-form-autreAide-0-container").hide();
        });
      }
    });

    // The input 'Aucune aide' is checked by default, make sure this is not the case.
    $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);

    updateEvaluationInputsVisibility();

    // For the third form screen, always enable the submit button
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "third-form-screen") {
      $('button[type="submit"]').prop('disabled', false);
    }
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarcheAvisFormTab</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>f6cf80af-4fc6-421b-9612-d6b6cad37820</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>
/* Make the width of the demarche avis form smaller */
#body.hidelefthideright .main {
  .make-md-column(8, @main-padding);
  .make-md-column-push(2);

  #mainContentArea {
    @media (min-width: @screen-sm-min) {
      padding-left: 5rem;
      padding-right: 5rem;
    }
  }

}

/* Fix style conflicts between bootstrap and dsfr */
legend.fr-fieldset__legend {
  border-bottom: none;
}

/* Rules to match the required style from the sketch specifications */
@bf500: #000091; // --fr-bf500
@bf100: #f2f2f9; // --fr-bf100
@document-title-margin-bottom: 1rem;
#xwikimaincontainer #mainContentArea {
  .document-info {
    margin-top: 2rem;
    margin-bottom: 2rem;
    @media (min-width: @screen-sm-min) {
      margin-top: 1rem;
      margin-bottom: @document-title-margin-bottom;
    }

    h1 {
      color: @bf500;
      font-size: 2.5rem;
      text-align: center;
    }
  }

  #xwikicontent {
    margin-top: 1.5rem;
    @media (min-width: @screen-sm-min) {
      margin-top: 1rem;
    }
  }

  #avis-tab {
    .form-preambule {
      margin-bottom: 2rem;
      @media (min-width: @screen-sm-min) {
        margin-top: 1em;
        margin-bottom: 2.5rem;
      }

      h2 {
        margin-bottom: 0rem;
        .form-demarchename {
          font-weight: normal;
        }
      }
    }
    @media (min-width: @screen-sm-min) {
      .eval-container {
        margin-top: 1.5rem;
      }
    }

    /* Fix large text labels, to make them look like fieldsets */
    .fr-label.fr-text--lg {
      margin-bottom: 0;
      font-weight: 700;
      .fr-hint-text {
        font-weight: 400;
      }
    }
    /* Adjust margins of the second page legends that are large text */
    .eval-container .fr-fieldset__legend.fr-text--lg {
      margin-bottom: 1.5rem;
    }
  }
}


/*
 * Display the blue background for the form title
 * This is using a `::before` element that span across the window
 * This might not be the cleanest solution, but this surely is one of the simplest,
 * considered how the layouts are structured in the wiki
 */
#xwikimaincontainer {
  /*
  * make overflow-x hidden so that the blue background element that is exceeding the layout width
  * does not make the entire window overflow and displays a horizontal scrollbar
  */
  overflow-x: hidden;

  #contentcontainer .main {
    @main-margin-top: 4.5rem;
    @top-compensation: 4rem; // 4rem is enough to compensate the parent margins / paddings

    @media (min-width: @screen-sm-min) {
      margin-top: @main-margin-top;
    }

    .document-header {
      @media (max-width: @screen-xs-max) {
        background-color: @bf100;
      }

      #document-title {
        &amp;::before {
          content: "";
          display: block;
          position: absolute;
          top: calc(-@main-margin-top - @top-compensation);
          left: -50vw;
          z-index: -10;
          width: 200vw;
          @height-compensation: @top-compensation  + @main-margin-top + @document-title-margin-bottom;
          // Need to use minus signs, else the minifier will remove spaces (and it will break)
          height: calc(~'100% - ' -@height-compensation);
          background-color: @bf100;
        }
      }
    }
  }
}



/* Custom style for the final step of the form */

// Unfortunately the less parser can't handle css variables
@bf500: #000091; // var(--bf500);

#xwikimaincontainer #mainContentArea #avis-tab .form-final-step-information {
  margin-bottom: 3rem;

  ul {
    padding: 0;

    li {
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      list-style-type: none;

      /* the icons */
      .list-icon {
        font-size: 2rem;
        margin-right: 1rem;
        margin-top: 0.25rem;
        // We can't change the color of an svg from an img tag
        // So we are using css filters hack to modify the color
        // Reproducing the color @bf500 using the tool: https://codepen.io/sosuke/pen/Pjoqqp
        filter: invert(13%) sepia(100%) saturate(5009%) hue-rotate(243deg) brightness(55%) contrast(134%);
      }
    }
  }
  p a {
    color: @bf500;
  }
}

</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>dsfr-form-fixes</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
