<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarcheAvisStatisticsTab" locale="">
  <web>Demarches.Code</web>
  <name>DemarcheAvisStatisticsTab</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>xwiki:Demarches.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>DemarcheAvisStatisticsTab</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($AVIS_CLASS_ID = 'Avis.Code.AvisClass')
#set ($AVIS_STATS_CLASS_ID = 'Avis.Code.AvisStatsClass')
## "clean" is set to false because the cleaning wipes out the canvas elements which are generated by ChartJS
{{html wiki="true" clean="false"}}

#macro(computeAvisStats $maxDate)
  #if ("$!maxDate" == '')
    ## Retrieve stats directly from the AvisStats object
    #set ($avisStats = $doc.getObject($AVIS_STATS_CLASS_ID))
    #set ($avisCount = $avisStats.getValue('occurrences'))
    #set ($satisfactionIndex = $avisStats.getValue('moyenne'))
  #else
    ## Compute stats dynamically taking the date into account
    #set ($hql = 'select count(*), avg(score.value) from XWikiDocument as doc, BaseObject as avis, IntegerProperty as score, StringProperty as demarche where avis.name = doc.fullName and avis.className = :className and avis.id = score.id.id and score.id.name = :scoreProperty and demarche.id.id = avis.id and demarche.id.name = :demarcheProperty and demarche.value = :demarche and score.value &gt; 0 and doc.creationDate &lt;= :date')
    #set ($entries = $services.query.hql($hql).bindValue('className', $AVIS_CLASS_ID).bindValue('scoreProperty', 'score').bindValue('demarcheProperty', 'demarche').bindValue('demarche', $doc.fullName).bindValue('date', $maxDate).execute())
    #if ($entries.size() &gt; 0)
      #set ($entry  = $entries[0])
      #set ($avisCount = $entry[0])
      #set ($satisfactionIndex = $entry[1])
    #end
  #end
  #if ($avisCount &amp;&amp; $avisCount &gt; 0)
    #set($satisfactionIndexPercent = $mathtool.mul($mathtool.sub($satisfactionIndex, 1), 50))
    #set ($satisfactionIndexPercentRounded = ${mathtool.round($satisfactionIndexPercent)})
    #set($explanationDoc = $xwiki.getDocument('Main.Satisfaction'))
    #set($explanationLink = "&lt;a href='$escapetool.xml($explanationDoc.getURL())' title='$escapetool.xml($explanationDoc.title)' class='average-help'&gt;&lt;span class='fa fa-question-circle-o'&gt;&lt;/span&gt;&lt;/a&gt;")
  #end
#end

#macro(displayTableRow $value $number $className $category $label)
  #set ($systemTime = $datetool.systemTime)
  #set ($xDoc = $xwiki.getDocument("XWiki.$systemTime"))
  #set ($xObj = $xDoc.newObject($className))
  #set ($discard = $xObj.set($category, "$!value"))
  #if ($label)
    &lt;tr&gt;&lt;td&gt;$label&lt;/td&gt;&lt;td&gt;$number&lt;/td&gt;&lt;/tr&gt;
  #else
    &lt;tr&gt;&lt;td&gt;$xDoc.display($category, $xObj)&lt;/td&gt;&lt;td&gt;$number&lt;/td&gt;&lt;/tr&gt;
  #end
#end

#macro(addAvisDataTable $tableId $tableCaption $propertyLabel $property $propertyType $propAlias $maxDate $percent $labels)
  #if (!$propAlias)
    #set ($propAlias = 'prop.value')
  #end
  #set ($dateClause = '')
  #if ("$!maxDate" != '')
    #set ($dateClause = ' and doc.creationDate &lt;= :date')
  #end
  #if ($percent)
    #set ($query = "select count(doc.fullName) from XWikiDocument as doc, BaseObject as obj, $propertyType, StringProperty demarche where doc.fullName = obj.name and obj.className = :className and obj.id = prop.id.id and prop.id.name = :propertyName and demarche.id.id = obj.id and demarche.id.name = 'demarche' and demarche.value = '$doc.fullName' and $propAlias &lt;&gt; '' $dateClause")
    #set ($query = $services.query.hql($query).bindValue('className', $AVIS_CLASS_ID).bindValue('propertyName', $property))
    #if ("$!maxDate" != '')
      #set ($query = $query.bindValue('date', $maxDate))
    #end
    #set ($total = $query.execute().get(0))
  #end
  #set ($showData = false)
  ## For 'smiley' tables, we iterate over the possible values: 0, 1, 2
  #set ($smileyProperties = ['score', 'facile', 'comprehensible'])
  #if ($smileyProperties.contains($property))
    #set ($possibleValues = [1..3])
  #else
    ## All other properties are StaticLists
    #set ($possibleValues = $xwiki.getClass($AVIS_CLASS_ID).get($property).getListValues())
  #end
  ## dataMap is a LinkedHashMap, so the order is preserved
  #set ($dataMap = {})
  ## Initialize map with all possible values at 0, because we want them even if not returned by the database query
  #foreach ($value in $possibleValues)
    #set ($dataMap[$value] = 0)
  #end
  #set ($query = "select $propAlias, count(doc.fullName) from XWikiDocument as doc, BaseObject as obj, $propertyType, StringProperty demarche where doc.fullName = obj.name and obj.className = :className and obj.id = prop.id.id and prop.id.name = :propertyName and demarche.id.id = obj.id and demarche.id.name = 'demarche' and demarche.value = '$doc.fullName' $dateClause group by $propAlias")
  #set ($query = $services.query.hql($query).bindValue('className', $AVIS_CLASS_ID).bindValue('propertyName', $property))
  #if ("$!maxDate" != '')
    #set ($query = $query.bindValue('date', $maxDate))
  #end
  #set ($entries = $query.execute())
  #foreach ($entry in $entries)
    #set ($key = $entry.get(0))
    #if ($key != $NULL)
      #set ($value = $entry.get(1))
      #set ($dataMap[$key] = $value)
    #end
  #end
  #set ($data = [])
  #foreach ($key in $dataMap.keySet())
    #set ($value = $dataMap[$key])
    #if ($value != 0)
      #set ($showData = true)
    #end
    #set ($discard = $data.add({'key': $key, 'value': $value}))
  #end
  #if ($showData)

    &lt;table id="$tableId" class="hidden"&gt;
    &lt;caption&gt;$tableCaption&lt;/caption&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;$propertyLabel&lt;/th&gt;
        &lt;th&gt;Réponses&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    #foreach ($item in $data)
      #set ($value = $item.get('key'))
      #set ($number = $item.get('value'))
      #if(!$number)
        #set($number = 0)
      #end
      #if ($percent)
        #set ($number = $mathtool.div($mathtool.mul($number,100), $total))
        #set ($number = $mathtool.round($number))
      #end
      #if ($value)
        #set ($label = $NULL)
        #if ($labels)
          #set ($label = $labels.get($value))
        #end
        #displayTableRow($value $number $AVIS_CLASS_ID $property $label)
      #end
    #end
    &lt;/tbody&gt;
    &lt;/table&gt;
  #else

    &lt;span style="text-align:center"&gt;Aucune réponse.&lt;/span&gt;
  #end
#end

#set ($maxDateString = "$!request.date")
#if ($maxDateString != '')
  #set ($maxDate = $datetool.toDate('yyyy-MM-dd hh:mm', "$maxDateString 23:59"))
#end

#computeAvisStats($maxDate)

&lt;div class="tab-pane fade #if($selectedTab == 'statistics-tab')active in#end" role="tabpanel" id="statistics-tab" aria-labelledby="statistics-tab"&gt;
#if ($avisCount &amp;&amp; $avisCount &gt; 0)
    #set ($date = $datetool.toDate('yyyy-MM-dd', '2018-06-15'))
    #set ($fDate = $datetool.format('d MMMM yyyy', $date))
    #set ($label = $services.localization.render('wikidemarches.demarche.avis.stats.recueil', [$fDate, $avisCount]))
    #if ("$!maxDate" != '')
      #set ($fMaxDate = $datetool.format('d MMMM yyyy', $maxDate))
      #set ($label = $services.localization.render('wikidemarches.demarche.avis.stats.recueil.between', [$fDate, $fMaxDate, $avisCount]))
    #end
    &lt;span class="lighter"&gt;$label&lt;/span&gt;
  &lt;div class="row vertical-align"&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12" style="text-align: center; padding: 2em 0;"&gt;
    &lt;div class="lighter"&gt;Indice de satisfaction global&lt;/div&gt;
      &lt;span style="font-size:400%"&gt;
${satisfactionIndexPercentRounded}&amp;nbsp;%&amp;nbsp;$explanationLink
&lt;/span&gt;
&lt;div&gt;($avisCount avis)&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12" style="text-align: center;"&gt;
      #addAvisDataTable('score', 'Répartition des avis', 'Satisfaction', 'score', 'IntegerProperty as prop', 'prop.value', $maxDate, true, {1: 'avis&amp;#10;négatifs', 2:'avis&amp;#10;moyens', 3:'avis&amp;#10;positifs'})

      #if ($showData)
        #set($chartOptions = {
          "backgroundColors": ["#e62623", "#d58000", "#00ac07"],
          "opacity": 0.8,
          "afterValue": "%",
          "skipZeros": true,
          "legend": {
            "display": false
          },
          "layout": {
            "padding": {
              "left": 50,
              "right": 50,
              "top": 50,
              "bottom": 50
            }
          },
          "plugins": {
            "datalabels": {
              "anchor": "end",
              "align": "end",
              "includeLegend": true
            }
          }
        })
        #set ($options = $jsontool.serialize($chartOptions).replaceAll("~","~~").replaceAll("'","~'"))
        {{tableToChartJS type='pie' table='score' options='$options'/}}
      #end

      &lt;div class="lighter"&gt;Répartition des avis&lt;/div&gt;

    &lt;/div&gt;
  &lt;/div&gt;
  &lt;h2&gt;Détail des avis&lt;/h2&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
      &lt;h3&gt;Facilité d'usage&lt;/h3&gt;
      #addAvisDataTable('facile', 'Répartition des réponses sur la facilité d''usage', 'Facilité', 'facile', 'IntegerProperty as prop', 'prop.value', $maxDate, false, $NULL)
      #set($chartOptions = {
          "backgroundColors": ["#e62623", "#d58000", "#00ac07"],
          "opacity": 0.8,
          "labelsMap": {"Mauvais": "\uf119", "Moyen": "\uf11a", "Bon":"\uf118"},
          "scales": {
            "xAxes": [{
              "gridLines": {"display": false, "drawBorder": false},
              "ticks": { "beginAtZero": true, "display": false}
            }],
            "yAxes": [{
              "gridLines": {"display": false, "drawBorder": true},
              "ticks": {"fontFamily": "FontAwesome", "fontSize": 24}
            }]
          },
          "tooltips": {
            "titleFontFamily": "FontAwesome"
          },
          "legend": {
            "display": false
          },
          "layout": {
            "padding": {
              "right": 50
            }
          },
          "plugins": {
            "datalabels": {
              "anchor": "end",
              "align": "end"
            }
          }
        })
      #set ($options = $jsontool.serialize($chartOptions).replaceAll("~","~~").replaceAll("'","~'"))

      #if ($showData)

        {{tableToChartJS type='horizontalBar' table='facile' options='$options'/}}
      #end

    &lt;/div&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
      &lt;h3&gt;Compréhension&lt;/h3&gt;
      #addAvisDataTable('comprehensible', 'Répartition des réponse sur la compréhension', 'Facilité de compréhension', 'comprehensible', 'IntegerProperty as prop', 'prop.value', $maxDate, false, $NULL)
      #if ($showData)

        {{tableToChartJS type='horizontalBar' table='comprehensible' options='$options'/}}
      #end

    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
      &lt;h3&gt;Difficultés rencontrées&lt;/h3&gt;
      #addAvisDataTable('difficultes',  'Difficultés rencontrées', 'Difficulté', 'difficultes', 'DBStringListProperty as prop join prop.list list', 'list', $maxDate, false, $NULL)
      #set($chartOptions = {
          "maintainAspectRatio": false,
          "backgroundColors": ["#a89ecc"],
          "opacity": 0.8,
          "skipZeros": true,
          "scales": {
            "xAxes": [{
              "gridLines": {"display": false, "drawBorder": false},
              "ticks": { "beginAtZero": true, "display": false}
            }],
            "yAxes": [{
              "gridLines": {"display": false, "drawBorder": true},
              "ticks": { "display": true, "mirror": true, "padding": -5, "labelOffset": -20},
              "barThickness": 25,
              "maxBarThickness": 25
            }]
          },
          "legend": {
            "display": false
          },
          "layout": {
            "padding": {
              "right": 50
            }
          },
          "plugins": {
            "datalabels": {
              "anchor": "end",
              "align": "end"
            }
          }
        })
      #set ($options = $jsontool.serialize($chartOptions).replaceAll("~","~~").replaceAll("'","~'"))

      #if ($showData)

        {{tableToChartJS type='horizontalBar' table='difficultes' options='$options' cssClass='histo'/}}
      #end

    &lt;/div&gt;
    &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
      &lt;h3&gt;Aides sollicitées&lt;/h3&gt;
      #addAvisDataTable('aide', 'Besoins d''aide', 'Aide', 'aide', 'DBStringListProperty as prop join prop.list list', 'list', $maxDate, false, $NULL)
      #if ($showData)

        {{tableToChartJS type='horizontalBar' table='aide' options='$options' cssClass='histo'/}}
      #end

    &lt;/div&gt;
  &lt;/div&gt;
  #*
  #set ($query = $services.query.hql("select count(*) from BaseObject as avis, StringProperty as modalite, StringProperty as demarche where avis.className = :avisClass and avis.id = modalite.id.id and modalite.id.name = :modaliteProperty and demarche.id.id = avis.id and demarche.id.name = :demarcheProperty and demarche.value = :demarche"))
  #set ($discard = $query.bindValue("demarche", $doc.fullName))
  #set ($discard = $query.bindValue("avisClass", 'Avis.Code.AvisClass'))
  #set ($discard = $query.bindValue("modaliteProperty", 'modalite'))
  #set ($discard = $query.bindValue("demarcheProperty", 'demarche'))
  #set ($modaliteCount = $query.execute()[0])

  #if ($modaliteCount &gt; 0)
    &lt;h2&gt;Modalités&lt;/h2&gt;

    #set ($query = $services.query.hql("select sum(case when vote.value in ('true', 'false') then 1 else 0 end) from BaseObject as avis, StringProperty as vote, StringProperty as demarche where avis.className = :avisClass and avis.id = vote.id.id and vote.id.name = :voteProperty and demarche.id.id = avis.id and demarche.id.name = :demarcheProperty and demarche.value = :demarche"))
    #set ($discard = $query.bindValue("demarche", $doc.fullName))
    #set ($discard = $query.bindValue("avisClass", 'Avis.Code.AvisClass'))
    #set ($discard = $query.bindValue("voteProperty", 'vote'))
    #set ($discard = $query.bindValue("demarcheProperty", 'demarche'))
    #set ($votesCount = $query.execute()[0])
    #set ($query = $services.query.hql("select sum(case when vote.value = 'true' then 1 else 0 end), sum(case when vote.value = 'false' then 1 else 0 end) from BaseObject as avis, StringProperty as vote, StringProperty as demarche where avis.className = :avisClass and avis.id = vote.id.id and vote.id.name = :voteProperty and demarche.id.id = avis.id and demarche.id.name = :demarcheProperty and demarche.value = :demarche"))
    #set ($discard = $query.bindValue("demarche", $doc.fullName))
    #set ($discard = $query.bindValue("avisClass", 'Avis.Code.AvisClass'))
    #set ($discard = $query.bindValue("voteProperty", 'vote'))
    #set ($discard = $query.bindValue("demarcheProperty", 'demarche'))
    #set ($votes = $query.execute())
    #if ($votes.size() &gt; 0)
      #set ($votesOui = $votes[0][0])
      #set ($votesAutre =  $votes[0][1])
    #end

    #set ($query = "select count(doc.fullName) from XWikiDocument as doc, BaseObject as obj, StringProperty as prop, StringProperty demarche where doc.fullName = obj.name and obj.className = 'Avis.Code.AvisClass' and obj.id = prop.id.id and prop.id.name = 'modalite' and demarche.id.id = obj.id and demarche.id.name = 'demarche' and demarche.value = '$doc.fullName' and prop.value='autrement'")
    #set ($results = $services.query.hql($query).execute())
    #set ($modaliteAutre = $results.get(0))

    &lt;div class="row"&gt;
      &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
        &lt;h3&gt;Parcours dématérialisés&lt;/h3&gt;
        #addAvisDataTable('modalite', 'Parcours dématérialisés', 'Modalité', 'modalite', 'StringProperty as prop', 'prop.value', true, {'en-ligne-entièrement':'Démarches&amp;#10;réalisées en ligne','en-ligne-partiellement':'En ligne&amp;#10;mais pas jusqu''au bout','autrement':'Autre&amp;#10;(papier, guichet&amp;hellip;)'})

        #set ($query = "select count(doc.fullName) from XWikiDocument as doc, BaseObject as obj, StringProperty as prop, StringProperty demarche where doc.fullName = obj.name and obj.className = 'Avis.Code.AvisClass' and obj.id = prop.id.id and prop.id.name = 'modalite' and demarche.id.id = obj.id and demarche.id.name = 'demarche' and demarche.value = '$doc.fullName' and prop.value='en-ligne-entièrement'")
        #set ($results = $services.query.hql($query).execute())
        #set ($modaliteOnline = $results.get(0))
        #set ($modaliteOnlinePercent = $mathtool.div($mathtool.mul($modaliteOnline,100), $modaliteCount))
        #set ($modaliteOnlinePercent = $mathtool.round($modaliteOnlinePercent))

        &lt;span&gt;$services.localization.render('wikidemarches.demarche.avis.stats.online', $modaliteOnlinePercent)&lt;/span&gt;
        #if ($showData)
          #set($chartOptions = {
            "backgroundColors": ["#82b876", "#f9b43e", "#bcbcbc"],
            "opacity": 1,
            "afterValue": "%",
            "displayPercentFirst": 0,
            "skipZeros": true,
            "legend": {
              "display": false
            },
            "layout": {
              "padding": {
                "left": 50,
                "right": 50,
                "top": 50,
                "bottom": 50
              }
            },
            "plugins": {
              "datalabels": {
                "anchor": "end",
                "align": "end",
                "includeLegend": true
              }
            }
          })
          #set ($options = $jsontool.serialize($chartOptions).replaceAll("~","~~").replaceAll("'","~'"))

          {{tableToChartJS type='pie' table='modalite' options='$options' /}}
        #end

      &lt;/div&gt;
      #if ($modaliteAutre &gt; 0)
        #if ($votesCount == 0)
          #set ($dematRequestedPercent = 0)
          #set ($noDematRequestPercent = 100)
        #else
          #set ($dematRequestedPercent = $mathtool.round($mathtool.div($mathtool.mul($votesOui,100),$votesCount)))
          #set ($noDematRequestPercent = $mathtool.round($mathtool.div($mathtool.mul($votesAutre,100),$votesCount)))
        #end
        &lt;div class="col-lg-6 col-md-6 col-sm-12"&gt;
          &lt;h3&gt;Souhaits de dématérialisation&lt;/h3&gt;
          &lt;span&gt;$services.localization.render('wikidemarches.demarche.avis.stats.demat-requests', $dematRequestedPercent)&lt;/span&gt;
          &lt;table id="autre" class="hidden"&gt;
            &lt;caption&gt;Souhaits de dématérialisation&lt;/caption&gt;
            &lt;thead&gt;
              &lt;tr&gt;&lt;th&gt;Souhait&lt;/th&gt;&lt;th&gt;Réponses&lt;/th&gt;&lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
              &lt;tr&gt;&lt;td&gt;Dématérialisation&amp;#10;souhaitée&lt;/td&gt;&lt;td&gt;$dematRequestedPercent&lt;/td&gt;&lt;/tr&gt;
              &lt;tr&gt;&lt;td&gt;Dématérialisation&amp;#10;non demandée&lt;/td&gt;&lt;td&gt;$noDematRequestPercent&lt;/td&gt;&lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;

          #set($chartOptions = {
            "backgroundColors": ["#a89ecc","#bcbcbc"],
            "opacity": 0.8,
            "afterValue": "%",
            "displayPercentFirst": 0,
            "skipZeros": true,
            "legend": {
              "display": false
            },
            "layout": {
              "padding": {
                "left": 50,
                "right": 50,
                "top": 50,
                "bottom": 50
              }
            },
            "plugins": {
              "datalabels": {
                "anchor": "end",
                "align": "end",
                "includeLegend": true
              }
            }
          })
          #set ($options = $jsontool.serialize($chartOptions).replaceAll("~","~~").replaceAll("'","~'"))

          {{tableToChartJS type='pie' table='autre' options='$options' /}}

        &lt;/div&gt;
      #end
    &lt;/div&gt;
  #end
  *#
#else
 #set ($noAvisYet = $services.localization.render('wikidemarches.demarche.avis.stats.noAvisYet'))
 &lt;div class="lighter" style="font-size: 1.3em; text-align: center; margin: 5em 0;"&gt;$noAvisYet&lt;/div&gt;
#end
&lt;/div&gt;
{{/html}}
{{/velocity}}</content>
</xwikidoc>
