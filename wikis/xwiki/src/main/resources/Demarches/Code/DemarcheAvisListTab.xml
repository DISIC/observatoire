<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarcheAvisListTab" locale="">
  <web>Demarches.Code</web>
  <name>DemarcheAvisListTab</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>xwiki:Demarches.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Demarches.Code.Parametres" /}}

{{velocity}}
{{html wiki="true" clean="false"}}
&lt;div class="tab-pane fade #if($selectedTab == 'liste-avis-tab')active in#end" role="tabpanel" id="liste-avis-tab" aria-labelledby="liste-avis-tab"&gt;
#set($discard = $xwiki.jsx.use("Demarches.Code.DemarcheAvisListTab"))
#set($discard = $xwiki.ssx.use("Demarches.Code.DemarcheAvisListTab"))
#set ($columnsProperties = {
  'demarche': {'type': 'hidden'},
  'date': {'filterable': true, 'type': 'date'},
  'avisId': {'filterable': true},
  'source' : {'type' : 'text', 'html' : false, 'sortable' : true, 'filterable' : true},
  'score': {'html': true},
  'facile': {'type': 'number'},
  'comprehensible': {'type': 'number'},
  'difficultes': {'type': 'list', 'sortable': false},
  'autreDifficulte': {},
  'aide': {'type': 'list', 'sortable': false},
  'autreAide': {},
  'autre': {}
})
#set ($options = {
  'className': 'Avis.Code.AvisClass',
  'translationPrefix': 'avis.livetable.',
  'tagCloud': false,
  'rowCount': 10,
  'maxPages': 10,
  'selectedColumn': 'date',
  'defaultOrder': 'desc',
  'resultPage': 'Avis.Code.DemarcheAvisLivetableResults',
  'extraParams': "demarche=$escapetool.url($doc.fullName)"
})

#set ($columns = ['demarche', 'date', 'avisId', 'score', 'autre', 'facile', 'comprehensible', 'difficultes', 'autreDifficulte', 'aide', 'autreAide', 'source'])

#livetable('avis' $columns $columnsProperties $options)
## Add the HTML structure for the export buttons
&lt;div id="xwiki-livetable-tools-exporter-div"&gt;
  &lt;h2&gt;$services.localization.render('wikidemarches.demarche.avisList.export.title')&lt;/h2&gt;
  &lt;p&gt;$services.localization.render('wikidemarches.demarche.avisList.export.explanation')&lt;/p&gt;
  &lt;div id="warning-limits" class="box warningmessage" hidden="hidden" data-limit-csv="$EXPORT_LIMIT_CSV" data-limit-xls="$EXPORT_LIMIT_XLS"&gt;
    &lt;p&gt;
      $services.localization.render('wikidemarches.demarche.avisList.export.limit.start')
      &lt;span id="warning-limits-details"&gt;&lt;/span&gt;.
      $services.localization.render('wikidemarches.demarche.avisList.export.limit.end')
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class='avis-livetable-tools-exporter-aviscountcontainer'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="xwiki-livetable-tools-exporter-status"&gt;&lt;/div&gt;
## Add the buttons
{{livetableExporter livetable="avis" withAllFields="false" withPageName="false" withPageURL="false" filename="avis_$datetool.get('ddMMyyyyHHmmss')" customResults="Avis.Code.DemarcheAvisLivetableResultsAsync" async='true' label="$services.localization.render('wikidemarches.demarche.avisList.export.excel')" format="excel"/}}
##
{{livetableExporter livetable="avis" withAllFields="false" withPageName="false" withPageURL="false" filename="avis_$datetool.get('ddMMyyyyHHmmss')" customResults="Avis.Code.DemarcheAvisLivetableResultsAsync" async='true' label="$services.localization.render('wikidemarches.demarche.avisList.export.csv')" format="csv"/}}

&lt;/div&gt;
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarcheAvisListTab</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>030d952b-a1bb-4661-a759-7fa99e4fa85c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  var totalRows = -1;

  var NumberFormat = window.Intl &amp;&amp; window.Intl.NumberFormat;
  if (!NumberFormat) {
    // Bare minimum polyfill for browsers that don't have
    // Intl.NumberFormat (in short, IE)
    // In other browsers, numbers will be neatly displayed by packets of three
    // figures separated by narrow non breaking spaces.
    NumberFormat = function() {};
    NumberFormat.prototype.format = function(n) { return "" + n; };
  }

  function updateLimitWarnings() {
    var warningLimits = document.getElementById("warning-limits");
    var xlsLimit = parseInt(warningLimits.dataset.limitXls);
    var csvLimit = parseInt(warningLimits.dataset.limitCsv);
    var withinXLSLimit = totalRows &lt;=  xlsLimit;
    var withinCSVLimit = totalRows &lt;= csvLimit;
    var withinLimits = withinXLSLimit &amp;&amp; withinCSVLimit;

    warningLimits.hidden = withinLimits;
    if (withinLimits) {
      return;
    }

    var details = "";

    var numberFormatter = new NumberFormat('fr-FR');

    if (!withinXLSLimit) {
      details += "$services.localization.render('wikidemarches.demarche.avisList.export.limit.body')"
        .replace("FORMAT", "$services.localization.render('wikidemarches.demarche.avisList.export.format.xls')")
        .replace("NOMBRE", numberFormatter.format(xlsLimit));
      if (!withinCSVLimit) {
        details += " et ";
      }
    }

    if (!withinCSVLimit) {
      details += "$services.localization.render('wikidemarches.demarche.avisList.export.limit.body')"
        .replace("FORMAT", "$services.localization.render('wikidemarches.demarche.avisList.export.format.csv')")
        .replace("NOMBRE", numberFormatter.format(csvLimit));
    }

    document.getElementById("warning-limits-details").textContent = details;
  }

  $(document).ready(function() {
    ## generate, from velocity, the maps of values for the 3 columns
    var listOptions = {};
    #foreach($propName in ['score', 'facile', 'comprehensible'])
      listOptions["$propName"] = {
        #foreach($v in [1..3]) #if($foreach.count != 1),#end 
          '$v' : "$escapetool.javascript($services.localization.render("Avis.Code.AvisClass_${propName}_${v}"))"
        #end
      }
    #end
    // replace the avis livetable filters with selects
    $.each(listOptions, function(property, values) {
      var filterInput = $("table#avis td.xwiki-livetable-display-header-filter input[name='" + property + "']");
      if (filterInput.length &lt;= 0) {
        // no filter input found
        return;
      }
      var inputValue = filterInput.val();
      // prepare the select
      var select = $("&lt;select&gt;").attr('name', property + 'Select')
          .html("&lt;option value=''&gt;$escapetool.javascript($services.localization.render('platform.livetable.selectAll'))&lt;/option&gt;&lt;option disabled='disabled'&gt;────&lt;/option&gt;");
      $.each(values, function(value, displayValue) {
        var newOption = $("&lt;option&gt;").attr('value', value).html(displayValue);
        if (value == inputValue) {
          newOption.attr('selected', 'selected');
        }
        select.append(newOption);
      });
      // prepare the select listener
      select.change(function(selectChangeEvent) {
        filterInput.val($(selectChangeEvent.target).val());
        // trigger the change event, which is not magically triggered otherwise.
        // for some reason this doesn't work, will trigger the livetable change filters event
        // filterInput.trigger('change');
        $(document).trigger("xwiki:livetable:avis:filtersChanged");
      });
      // hide the input and add the select in the livetable filters
      filterInput.after(select);
      filterInput.hide();
    });
    updateLimitWarnings();
  });

  $(document).on("xwiki:livetable:receivedEntries", function(e, d) {
    if (d &amp;&amp; d.data &amp;&amp; d.data.hasOwnProperty('totalrows')) {
      totalRows = d.data.totalrows;
      updateLimitWarnings();
    }
  });
});</code>
    </property>
    <property>
      <name>Livetable filters transformation to select, for the number values</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarcheAvisListTab</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>f2bf36c6-4026-4543-90b8-26e919e8edf2</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>div.xwiki-livetable-container {
  width: 100%;
  overflow-x: auto;
}
table#avis {
  width: 100%;
  font-size: 81.25%; /* 13px for a base of 16 */
  thead.xwiki-livetable-display-header {
    font-size: 90%;
  }
  .xwiki-livetable-display {
    table-layout: fixed;
    width: 100%;
    min-width: 142em; /* This fits in 1920px, if ever we want to put the table full width, it would fit in a Full HD*/
  }
  .xwiki-livetable-display &gt; tbody &gt; tr &gt; td {
    padding: 4px;
  }
  /* Some sizes for the columns depending on their content */
  .xwiki-livetable-display {
    thead th:nth-child(2), thead th:nth-child(3), thead th:nth-child(4){
      width: 4.9%
    }
    thead th:nth-child(5) {
      width: 21%;
    }
    thead th:nth-child(8), thead th:nth-child(9) {
      width: 15.5%;
    }
    thead th:nth-child(10), thead th:nth-child(11){
      width: 10.5%;
    }
    thead th:nth-child(6), thead th:nth-child(7) {
      width: 4.4%;
    }
    thead th:nth-child(12){
      width: 3.5%;
    }
  }
  /* Filters styling */
  .xwiki-livetable-display .xwiki-livetable-display-header-filter {
    position: relative;
    select {
      -webkit-appearance: none;
      -moz-appearance: none;
    }
    &amp;:nth-child(7), &amp;:nth-child(9),
    &amp;:nth-child(3), &amp;:nth-child(5), &amp;:nth-child(6) {
      &amp;:before {
        content: "\f078"; /* chevron */
        font: normal normal normal 14px/1 FontAwesome;
        display: inline-block;
        position: absolute;
        right: 0.75em;
        top: 0.2em;
        pointer-events: none;
      }
    }
  }
}

/* Force the toplevel table to display block so that we can scroll only the second row, the one with the table, and have the pagination position properly. */
table#avis {
  display: block;
  &amp;&gt;tbody {
    display: block;
    &amp;&gt;tr {
      display: block;
      &amp;&gt;td {
        display: block;
      }
      &amp;&gt;td.xwiki-livetable-display-container {
        overflow-x: auto;
      }
    }
  }
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>Style for the avis list tab (and livetable)</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
