<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarchesMacros" locale="">
  <web>Demarches.Code</web>
  <name>DemarchesMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>Demarches.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
## These macros are used to display two types of objects: either Demarches or Avis

## Demarche view/edit form macros
#macro (isDemarcheOwner $ownedDemarchePage)
  #if (!$ownedDemarchePage)
    #set ($ownedDemarchePage = $doc)
  #end
  #set ($user = $xcontext.user)
  #set ($demarche = $ownedDemarchePage.getObject('Demarches.Code.DemarchesClass'))
  #set ($owners = $demarche.getValue('proprietaires'))
  ## FIXME: this is not the best test, prefix users will match. XWiki.aluca vs XWiki.alucas
  #if ($owners &amp;&amp; $owners.indexOf($xcontext.user) &gt;= 0)
    #set ($isDemarcheOwner = true)
  #else
    #set ($isDemarcheOwner = false)
  #end
#end

#macro (displayProperty $object $propName $isMandatory $action)
  #set ($clazz = $xwiki.getDocument('Demarches.Code.DemarchesClass').xWikiClass)
  #set ($hint = $NULL)
  #set ($isBoolean = false)
  #set ($propertyObject = $NULL)
  #foreach ($prop in $clazz.properties)
    #if ($prop.name == $propName)
      #set ($propertyObject = $prop)
      #set ($hint = $prop.hint)
      #set ($isBoolean = ($prop.type == 'BooleanClass'))
      #set ($isNumber = ($prop.type == 'NumberClass'))
    #end
  #end
  #set ($fieldIsInvalid = false)
  #if ($xcontext.validationStatus.propertyErrors.contains($propName))
    #set($fieldIsInvalid = true)
  #end
  #if ($isBoolean &amp;&amp; $action == 'edit')
    &lt;dt&gt;&lt;label#if ($action == 'edit') for="Demarches.Code.DemarchesClass_0_${propName}"#end&gt;$object.display($propName, $action)#if($isMandatory)(*) #end$propertyObject.prettyName &lt;/label&gt;
      #if ($hint &amp;&amp; !$isRowEditor)&lt;span class="xHint"&gt;&lt;span class='xHint-text'&gt;$services.localization.render($hint)&lt;/span&gt;&lt;/span&gt;#end
    &lt;/dt&gt;
  #else
    &lt;dt&gt;&lt;label#if ($action == 'edit') for="Demarches.Code.DemarchesClass_0_${propName}"#end&gt;#if($isMandatory)(*) #end $propertyObject.prettyName&lt;/label&gt;
    #if ($hint &amp;&amp; !$isRowEditor)&lt;span class="xHint"&gt;&lt;span class='xHint-text'&gt;$services.localization.render($hint)&lt;/span&gt;&lt;/span&gt;#end
    &lt;/dt&gt;
  #end
  &lt;dd class="property-value#if ($fieldIsInvalid) validation-failure#end"&gt;
    #if(!$isBoolean || $action != 'edit')
      #if ($isNumber &amp;&amp; $object.getProperty($propName).value)
        #if ($action == 'view')
          #if ($propName == 'ditesLeNousUneFois')
            $object.display($propName, $action)
          #else
            $numbertool.format('integer', $object.getProperty($propName).value)
          #end
        #else
          $object.display($propName, $action)
        #end
      #else
        $object.display($propName, $action)
      #end
    #end
    #if($fieldIsInvalid)
      {{error}}$services.localization.render("Demarches.Code.DemarchesClass_${propName}.validation"){{/error}}
    #end
  &lt;/dd&gt;
#end

## Avis form macros

#macro (displaySubTitle)
#set ($obj = $doc.getObject('Demarches.Code.DemarchesClass'))
#if ($obj)
  #set ($ministeres = $obj.getProperty('ministeres').value)
  #set ($categoriesPublics = $obj.getProperty('categoriesPublics').value)
  #set ($str = '')
  #if ($categoriesPublics &amp;&amp; $categoriesPublics.size() &gt; 0)
    #set ($map = $obj.getProperty('categoriesPublics').propertyClass.mapValues)
    #foreach ($p in $categoriesPublics)
      #if ($map[$p])
        #set ($str = "${str}$map[$p].value, ")
      #end
    #end
    #if ($str.length() &gt; 0)
      #set ($str = $str.substring(0, $mathtool.sub($str.length(),2)))
    #end
  #end
  #set ($ministereStr = '')
  #if ($ministeres &amp;&amp; $ministeres.size() &gt; 0)
    #foreach ($ministere in $ministeres)
     #set ($ministereDoc = $xwiki.getDocument($ministere))
     #set ($ministereObj = $ministereDoc.getObject('Ministeres.Code.MinisteresClass'))
     #set ($nom = $ministereObj.getProperty('nom').value)
     #if ($velocityCount &gt; 1)
       #set ($ministereStr = "$ministereStr - ")
     #end
     #set ($ministereStr = "$ministereStr$!nom")
    #end
  #end
  &lt;div class="subtitle"&gt;#if ($ministereStr.length() &gt; 0) $ministereStr #end #if ($str != '') #if ($ministereStr.length() &gt; 0)/ #end $str #end&lt;/div&gt;
#end
#end

#macro(setDefaultModalite $avis)
#set ($niveauDemat = $demarche.getProperty('niveauDemat'))
#set ($discard = $avis.set('modalite','autrement'))
#if ($niveauDemat &amp;&amp; $niveauDemat.value &amp;&amp; $niveauDemat.value.size() &gt; 0)
  #set ($niveauDemat = $niveauDemat.value)
  #set ($dematCriteres = ['teleprocedure', 'formulaire'])
  #foreach ($niveau in $niveauDemat)
    #if ($dematCriteres.contains($niveau))
      #set ($discard = $avis.set('modalite','en-ligne-enti√®rement'))
    #end
  #end
#end
#end

#macro (displayObjectForm $obj $showProperties)
#foreach($prop in $obj.xWikiClass.properties)
  #if ($showProperties.contains($prop.name))
    &lt;div class="fr-mb-10v"&gt;
      $doc.display($prop.name, 'edit', $obj)
    &lt;/div&gt;
  #end
#end
#end

#macro (displayMessage $key)
{{html clean="false"}}
&lt;div class="fr-mb-10v fr-mb-md-16v"&gt;
  &lt;div role="alert" class="fr-alert fr-alert--success"&gt;
      &lt;p class="fr-alert__title"&gt;$services.localization.render("${key}.title")&lt;/p&gt;
      &lt;p&gt;$services.localization.render($key)&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
{{/html}}
#end

#macro(displayScoreStats)
  #set($faicons = ['frown-o', 'meh-o', 'smile-o'])
  #set($voteResults = $services.query.hql("select sc.value, count(doc.fullName) from XWikiDocument as doc, BaseObject as obj ,IntegerProperty as sc, StringProperty dp where doc.fullName=obj.name and obj.className='Avis.Code.AvisClass' and obj.id=sc.id.id and sc.id.name='score' and dp.id.id = obj.id and dp.id.name = 'demarche' and dp.value = :dem and sc.value &gt; 0 group by sc.value order by 1 asc").bindValue('dem', $doc.fullName).execute())
  #set($totalVotes = 0)
  #set($votesMap = {1 : 0, 2 : 0, 3: 0})
  #foreach($r in $voteResults)
    #set($totalVotes = $totalVotes + $r[1])
    #set($discard = $votesMap.put($r[0], $r[1]))
  #end
  &lt;div class='row avis-stats'&gt;
  &lt;div class='col-xs-12'&gt;
    ==$services.localization.render('avis.score.title') &amp;ndash; $services.localization.render('avis.score.totalnumber', [$totalVotes])==
  &lt;/div&gt;
  &lt;div class='col-xs-12 col-sm-4'&gt;
  &lt;div class='avis-stats-container'&gt;
    #foreach($r in [3, 2, 1])
      &lt;div class='avis-statstrow avis-statsrow-${r}'&gt;
        &lt;div class='avis-statsrow-icon'&gt;&lt;span class='fa fa-${faicons.get($mathtool.sub($r, 1))}' title="$services.localization.render("Avis.Code.AvisClass_score_${r}")"/&gt;&lt;/div&gt;
        #set($currentPercent = $mathtool.round($mathtool.mul($mathtool.div($votesMap.get($r), $totalVotes), 100)))
        &lt;div class='avis-statstrow-amount'&gt;$!{currentPercent}%&lt;/div&gt;
        &lt;div class='avis-statstrow-bar'&gt;
          &lt;div class='avis-stats-bar' style="width: $!{currentPercent}%"&gt;&amp;nbsp;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    #end
  &lt;/div&gt;
  &lt;/div&gt;
  &lt;/div&gt;
#end

#macro(displayScoreAverage)
  #set($votesResults = $services.query.hql("select avg(sc.value), count(doc.fullName) from XWikiDocument as doc, BaseObject as obj ,IntegerProperty as sc, StringProperty dp where doc.fullName=obj.name and obj.className='Avis.Code.AvisClass' and obj.id=sc.id.id and sc.id.name='score' and dp.id.id = obj.id and dp.id.name = 'demarche' and dp.value = :dem and sc.value &gt; 0").bindValue('dem', $doc.fullName).execute())
  #set($votesAvg = $votesResults.get(0)[0])
  #if (!$votesAvg)
    #set($votesAvg = 0)
  #end
  #set($totalVotes = $votesResults.get(0)[1])
  &lt;div class='avis-average-container'&gt;
    ## what type of display we do?
    #set($avgVisualValue = 1)
    ## average as a percent
    #set($percentAvg = $mathtool.mul($votesAvg, 100))
    ## percents of filling for each of the 3 balls
    #set($ballsPercents = {'1' : 0, '2' : 0, '3' : 0})
    #if ($percentAvg &lt; 100)
      #set($avgVisualValue = 1)
      #set($ballsPercents = {'1' : $mathtool.sub($percentAvg, 0), '2' : 0, '3' : 0})
    #elseif ($percentAvg &lt; 200)
      #set($avgVisualValue = 2)
      #set($ballsPercents = {'1' : 100, '2' : $mathtool.sub($percentAvg, 100), '3' : 0})
    #else
      #set($avgVisualValue = 3)
      #set($ballsPercents = {'1' : 100, '2' : 100, '3' : $mathtool.sub($percentAvg, 200)})
    #end
    &lt;div class='avis-average-visual'&gt;
      &lt;div class='avis-average-balls avis-average-balls-$!{avgVisualValue}' title='$mathtool.roundTo(2, ${votesAvg}) / 3'&gt;
        #foreach($bp in $ballsPercents.entrySet())
          &lt;div class='avis-average-ball'&gt;
            &lt;div class='avis-average-ballcolor' &gt;&lt;/div&gt;
            &lt;div class='avis-average-ballwhite' style='width: ${mathtool.sub(100, $bp.value)}%'&gt;&lt;/div&gt;
            &lt;div class='avis-average-ballborder' &gt;&lt;/div&gt;
          &lt;/div&gt;
        #end
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class='avis-average-desc'&gt;$services.localization.render('avis.score.totalnumber', [$totalVotes])&lt;/div&gt;
  &lt;/div&gt;
#end

#macro(displayScoreAverageBar)
  ##set ($results = $services.query.hql("select count(*), sum(case when score.value=3 then 1 else 0 end) from XWikiDocument as doc, BaseObject as obj, IntegerProperty as score, StringProperty demarche where doc.fullName = obj.name and obj.className = 'Avis.Code.AvisClass' and obj.id = score.id.id and score.id.name = 'score' and demarche.id.id = obj.id and demarche.id.name = 'demarche' and demarche.value = :dem").bindValue('dem', $doc.fullName).execute())
  #set ($avisStats = $doc.getObject('Avis.Code.AvisStatsClass'))
  #set ($totalVotes = $avisStats.getProperty('occurrences').getValue())
  #set ($satisfactionIndex = $avisStats.getProperty('moyenne').getValue())
  &lt;div class='avis-average-container'&gt;
    #if ($totalVotes &amp;&amp; $totalVotes &gt; 0)
      #set($satisfactionIndexPercent = $mathtool.mul($satisfactionIndex, 100))
      ## What type of display we do?
      #set($avgVisualValue = 1)
      #if ($percent &gt; 33 &amp;&amp; $percent &lt; 66 )
        #set($avgVisualValue = 2)
      #elseif ($percent &gt;= 66 )
        #set($avgVisualValue = 3)
      #end
      #set ($satisfactionIndexPercentRounded = ${mathtool.round($satisfactionIndexPercent)})
      &lt;div class='avis-average-visual'&gt;
        &lt;div class='avis-average-barcontainer avis-average-barcontainer-$!{avgVisualValue}' title='$escapetool.xml($percentDisplayValue)'&gt;
          &lt;div class='avis-average-barouterborder'&gt;
            &lt;div class='avis-average-bar'&gt;
              &lt;div class='avis-average-barcolor' &gt;&lt;/div&gt;
              &lt;div class='avis-average-barwhite' style='width: ${mathtool.sub(100, $satisfactionIndexPercent)}%'&gt;&lt;/div&gt;
              ## &lt;div class='avis-average-barborder' &gt;&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      #set($explanationDoc = $xwiki.getDocument('Main.Satisfaction'))
      #set($explanationLink = "&lt;a href='$escapetool.xml($explanationDoc.getURL())' title='$escapetool.xml($explanationDoc.title)' class='average-help'&gt;&lt;span class='fa fa-question-circle-o'&gt;&lt;/span&gt;&lt;/a&gt;")
      &lt;div class='avis-average-desc'&gt;$services.localization.render('avis.score.satisfactionscore', ["$satisfactionIndexPercentRounded%", $totalVotes, $explanationLink])&lt;/div&gt;
    #else
      &lt;div class='avis-average-desc'&gt;$services.localization.render('avis.score.0votes')&lt;/div&gt;
    #end
  &lt;/div&gt;
#end


#* Set a specific background for demarches that were submitted by users and that were not
yet validated. *#
#macro(maybeSetWarningBackground)
  #set ($obj = $doc.getObject('Demarches.Code.DemarchesClass'))
  #if ($obj &amp;&amp; $obj.getProperty('statut').value == 'demandeUtilisateur')
    ## include specific style
    #set($discard = $xwiki.ssx.use('Demarches.Code.NewDemandeSSX'))
  #end
#end

#* Displays a warning message on the first step of the avis form, for demarche newly submitted, but not by the current user (no need to inform the submitter himself). *#
#macro(maybeDisplayStatusWarning)
  #set ($obj = $doc.getObject('Demarches.Code.DemarchesClass'))
  #if ($obj &amp;&amp; $obj.getProperty('statut').value == 'demandeUtilisateur')
    #set($demarcheDate = $datetool.format("d MMMM yyyy", $doc.creationDate))
    (%class='newdemande-message'%)(((
    {{info}}$services.localization.render('wikidemarches.demande.newdemarche.warning', [$demarcheDate]){{/info}}
    )))
  #end
#end
{{/velocity}}</content>
</xwikidoc>
