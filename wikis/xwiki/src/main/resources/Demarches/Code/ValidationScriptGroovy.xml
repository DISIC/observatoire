<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.ValidationScriptGroovy" locale="">
  <web>Demarches.Code</web>
  <name>ValidationScriptGroovy</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>ValidationScriptGroovy</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>//{{code}}
import java.util.regex.Pattern
import java.util.regex.Matcher
import org.apache.commons.lang3.StringUtils
import com.xpn.xwiki.validation.*
import com.xpn.xwiki.*
import com.xpn.xwiki.doc.*
import com.xpn.xwiki.objects.*

public class Val implements XWikiValidationInterface  {
    public boolean validateDocument(XWikiDocument doc, XWikiContext context) {

      def result = true
      def docTitle = doc.getTitle()
      if (StringUtils.isBlank(docTitle)) {
	    XWikiValidationStatus.addErrorToContext("Demarches.Code.DemarchesClass", "title1", "title1", "", context)
        result = false
      }

      def request = context.getRequest()

      def direction = request.getParameter("Demarches.Code.DemarchesClass_0_direction")
      def statut = request.getParameter("Demarches.Code.DemarchesClass_0_statut")

      if (statut != null &amp;&amp; statut.equals("active") &amp;&amp; StringUtils.isBlank(direction)) {
        XWikiValidationStatus.addErrorToContext("Demarches.Code.DemarchesClass", "direction", "direction", "", context)
        result = false
      }

      def date = request.getParameter("Demarches.Code.DemarchesClass_0_dateMiseEnLigne")
      if (!isDateValid(date)) {
        XWikiValidationStatus.addErrorToContext("Demarches.Code.DemarchesClass", "dateMiseEnLigne", "dateMiseEnLigne", "", context)
        result = false
      }

      return result
    }

    protected boolean isDateValid(String dateStr) {

      if (dateStr == null || dateStr.trim().length() == 0)
        return true

      dateStr = dateStr.trim()
      def pattern = Pattern.compile("[0-9][0-9]/[0-9][0-9][0-9][0-9]")
      def matcher = pattern.matcher(dateStr)

      return matcher.matches()

    }

    public boolean validateObject(BaseObject object, XWikiContext context) { 
      return true
    }
}
//{{/code}}</content>
</xwikidoc>
