<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.Top" locale="">
  <web>Demarches.Code</web>
  <name>Top</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>xwiki:Demarches.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title>Top</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($request.execute == "1")
  #set ($DEMARCHE_CLASS_NAME = 'Demarches.Code.DemarchesClass')
  #set ($hql = "select distinct obj.name from BaseObject obj, IntegerProperty as prop where obj.className = '$DEMARCHE_CLASS_NAME' and prop.id.id = obj.id and prop.id.name = 'top' and prop.value = 1")
  #set ($entries = $services.query.hql($hql).setLimit(0).execute())
  #set ($data = [])
  #foreach ($entry in $entries)
    #set ($page = $xwiki.getDocument($entry))
    #set ($obj = $page.getObject($DEMARCHE_CLASS_NAME))
    #set ($ministereIds = $obj.getValue('ministeres'))
    #set ($ministereName = '')
    #if ($ministereIds.size() &gt; 0)
      #set ($ministerePage = $xwiki.getDocument($ministereIds.get(0)))
      #set ($ministereObject = $ministerePage.getObject('Ministeres.Code.MinisteresClass'))
      #if ($ministereObject)
        #set ($ministereName = $!ministereObject.getValue('nom'))
      #end
    #end
    #set ($directionId = $obj.getValue('direction'))
    #set ($directionName = '')
    #if ($directionId)
      #set ($directionPage = $xwiki.getDocument($directionId))
      #set ($directionObject = $directionPage.getObject('Directions.Code.DirectionsClass'))
      #if ($directionObject)
        #set ($directionName = $directionObject.getValue('nom'))
      #end
    #end
    #set ($avisStats = $page.getObject('Avis.Code.AvisStatsClass'))
    #set ($avisCountValue = $avisStats.getValue('occurrences'))
    #set ($statutDemat = $obj.get('statutDemat'))
    #if ($avisCountValue &amp;&amp; $avisCountValue &gt;= 100)
      #set ($avisCountDisplay = $numbertool.integer($avisCountValue))
      #set ($satisfactionIndex = $avisStats.getValue('moyenne'))
      #set ($satisfactionIndexPercent = $mathtool.mul($mathtool.sub($satisfactionIndex, 1), 50))
      #set ($satisfactionIndexValue = ${mathtool.round($satisfactionIndexPercent)})
      #set ($satisfactionIndexDisplay = "$satisfactionIndexValue %")
    #elseif ($statutDemat == 'Non')
      #set ($satisfactionIndexValue = -2)
      #set ($satisfactionIndexDisplay = 'n/a')
      #set ($avisCountDisplay = $avisCountValue)
      #set ($avisCountValue = -2)
    #else
      #set ($satisfactionIndexValue = -1)
      #set ($avisCountDisplay = $avisCountValue)
      #set ($avisCountValue = -1)
      #set ($satisfactionIndexDisplay = 'Ã€ venir')
    #end
    #set ($volumetrie = $obj.getValue('volumetrie'))
    #set ($volumetrieDisplay = $obj.get('volumetrie'))
    #if (!$volumetrie)
      #set ($volumetrie = 0)
    #else
      #set ($volumetrieDisplay = $numbertool.integer($volumetrie))
    #end
    #set ($percentDematDisplay = $obj.get("pourcentageRecoursVoieDematerialisee"))
    #set ($idx = $percentDematDisplay.indexOf('%'))
    #if ($idx &gt; 0)
      #set ($percentDemat = $util.parseFloat($percentDematDisplay.replace('%','').replace(',','.').trim()))
      #set ($percentDematRounded = $mathtool.round($percentDemat))
      #set ($percentDematDisplay = "$percentDematRounded %")
    #else
      #set ($percentDemat = $mathtool.sub(0,$percentDematDisplay.hashCode()))
      #if ($percentDematDisplay == "n/a")
        #set ($percentDemat = -2)
      #elseif ($percentDematDisplay == "n/c")
        #set ($percentDemat = -1)
      #end
    #end
    ## If statutDemat is "Oui", then dateMiseEnLigneDispay should be "Ouvert"
    ## Else: if a date is present, display it, otherwise display "n/c"
    #if ($statutDemat == 'Oui')
      #set ($dateMiseEnLigneDisplay = 'Ouvert')
      #set ($dateMiseEnLigne = 10)
    #else
      #set ($dateMiseEnLigne = $obj.getValue('dateMiseEnLigne'))
      #if ("$!dateMiseEnLigne" != '')
        ## Add a hashcode, because we want to differentiate for example "2019" from "12/2019" while both have the same dateMiseEnLigne set to "12/2019"
        #set ($dateMiseEnLigneDisplay = $obj.get('dateMiseEnLigne'))
        #set ($dateMiseEnLigneTexte = $obj.getValue('dateMiseEnLigneTexte'))
        #set ($s = "$!dateMiseEnLigneTexte")
        #set ($h = $s.hashCode())
        #set ($dateMiseEnLigne = $mathtool.add($dateMiseEnLigne.getTime(), $h))
        #if ("$!dateMiseEnLigneTexte" != '')
          #set ($dateMiseEnLigneDisplay = $dateMiseEnLigneTexte)
        #end
      #else
        #set ($dateMiseEnLigneDisplay = 'n/c')
        #set ($dateMiseEnLigne = 0)
      #end
    #end
    #set ($urlScore = $obj.get('urlScore'))
    #set ($urlScoreValue = $urlScore)
    #if ($urlScore == 'n/a')
      #set ($urlScoreValue = -100)
    #elseif ($urlScore == 'n/c')
      #set ($urlScoreValue = -50)
    #end
    #set ($discard = $data.add(
      {
        "id": $page.fullName,
        "title": $page.displayTitle,
        "statutDemat": $statutDemat,
        "ministere": $ministereName,
        "groupes": $obj.get('groupesExternes'),
        "direction": $directionName,
        "dateMiseEnLigne": {
          "display": $dateMiseEnLigneDisplay,
          "value": $dateMiseEnLigne
        },
        "volumetrie": {
          "display": $volumetrieDisplay,
          "value": $volumetrie
          },
        "pourcentageRecoursVoieDematerialisee": {
          "display": $percentDematDisplay,
          "value": $percentDemat
        },
        "franceConnect": $obj.get('franceConnect'),
        "adapteMobile": $obj.get('adapteMobile'),
        "qualiteSupport": $obj.get('qualiteSupport'),
        "avisCount": {
          "value": $avisCountValue,
          "display": $avisCountDisplay
         },
        "satisfactionIndex": {
          "display": $satisfactionIndexDisplay,
          "value": $satisfactionIndexValue
        },
        "urlScore": {
          "display": $urlScore,
          "value": $urlScoreValue
        }
      }))
  #end
  #set ($map = { "data": $data})
  #set ($json = $jsontool.serialize($map))
  #set ($discard = $doc.addAttachment("data.json", $json.getBytes()))
  #set ($discard = $doc.save("Generate and attach file 'data.json'"))
  A new json has been generated and attached to this page: [[attach:data.json]].
#else
  {{info}}
  This page allows to generate a json representation of the demarches and to attach it to this page, in a format that is suitable for getting consumed by page [[observatoire.WebHome]]. In order to generate and attach the json, press the button below.

  [[Generate json data and attach it to this page&gt;&gt;path:$doc.getURL('view', 'execute=1')||class="btn btn-default]]
  {{/info}}
#end
{{/velocity}}</content>
</xwikidoc>
