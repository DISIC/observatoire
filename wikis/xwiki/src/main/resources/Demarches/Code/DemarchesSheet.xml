<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarchesSheet" locale="">
  <web>Demarches.Code</web>
  <name>DemarchesSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1544396400000</creationDate>
  <parent>DemarchesClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1544396400000</date>
  <contentUpdateDate>1544396400000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Demarches.Code.DemarchesMacros" /}}

{{velocity}}
{{html wiki="true" clean="false"}}
#set ($discard = $xwiki.jsx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $xwiki.ssx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $doc.use('Demarches.Code.DemarchesClass'))

#macro(displayArray $propName $propLabel)
  #set ($values = $demarche.getProperty($propName).value)
  #set ($str = '')
  #if ($values &amp;&amp; $values.size() &gt; 0)
    #foreach ($value in $values)
      #if ($propName == 'categoriesPublics')
        #set ($map = $demarche.getProperty($propName).propertyClass.mapValues)
        #set ($title = $map[$value].value)
      #else
        #set ($page = $xwiki.getDocument($value))
        #set ($title = $page.displayTitle)
      #end
      #if ($title)
        #set ($str = "$str$title, ")
      #end
    #end
    #if ($str.length() &gt; 2)
      #set ($str = $str.substring(0, $mathtool.sub($str.length(),2)))
      &lt;dt&gt;$propLabel&lt;/dt&gt;
      &lt;dd&gt;$str&lt;/dd&gt;
    #end
  #end
#end

#set ($demarche = $doc.getObject('Demarches.Code.DemarchesClass'))
#if ($demarche &amp;&amp; $xcontext.action == 'view' &amp;&amp; (($isGuest &amp;&amp; !$displayAvisFormOnly) || "$!viewMode" == 'cerfa-numerique'))
  &lt;div class="demarche-details-action"&gt;
    &lt;button class="btn btn-primary" aria-controls="demarche-details" aria-expanded="false"&gt;&lt;span class="fa fa-chevron-right"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="demarche-details-action-label"&gt;$services.localization.render('wikidemarches.demarche.details-on')&lt;/span&gt;&lt;/button&gt;
  &lt;/div&gt;
  &lt;dl id="demarche-details" class="demarche-details"&gt;
    #set ($nomComplet = $demarche.getValue('nomComplet'))
    #if ($nomComplet &amp;&amp; $nomComplet != $doc.title)
      &lt;dt&gt;$services.localization.render('wikidemarches.demarche.details.nomComplet')&lt;/dt&gt;
      &lt;dd&gt;$nomComplet&lt;/dd&gt;
    #end
    #displayArray('evenements', $services.localization.render('Demarches.Code.DemarchesClass_evenements'))
    #displayArray('categoriesPublics', $services.localization.render('Demarches.Code.DemarchesClass_publics'))
    #set ($champsStr = '')
    #set ($champs = $demarche.getValue('ministeres'))
    #if ($champs &amp;&amp; $champs.size() &gt; 0)
      #foreach ($champ in $champs)
        #set ($nom = $xwiki.getDocument($champ).get('nom'))
        ##set ($nom = $champPage.title)
        #set ($champsStr = "$champsStr$!nom - ")
      #end
    #end
    #if ($champsStr.length() &gt; 3)
      #set ($champsStr = $champsStr.substring(0, $mathtool.sub($champsStr.length(),3)))
      &lt;dt&gt;$services.localization.render('Demarches.Code.DemarchesClass_ministeres')&lt;/dt&gt;
      &lt;dd&gt;$champsStr&lt;/dd&gt;
    #end
    #set ($objet = $!escapetool.html($demarche.getValue('objet')))
    #if ("$!objet" != '')
      &lt;dt&gt;$services.localization.render('Demarches.Code.DemarchesClass_objet')&lt;/dt&gt;
      &lt;dd&gt;$objet&lt;/dd&gt;
    #end
    #set ($urlDemarche = $demarche.getValue('urlDemarche'))
    #if ("$!viewMode" == 'cerfa-numerique' &amp;&amp; "$!urlDemarche" != '')
      &lt;dt&gt;$services.localization.render('Demarches.Code.DemarchesClass_urlDemarche')&lt;/dt&gt;
      &lt;dd&gt;$urlDemarche&lt;/dd&gt;
    #end
    #set ($urlInfos = $demarche.getValue('urlInfos'))
    #if ("$!urlInfos" != '')
      &lt;dt&gt;$services.localization.render('wikidemarches.demarche.details.plus')&lt;/dt&gt;
      &lt;dd&gt;$urlInfos&lt;/dd&gt;
    #end
  &lt;/dl&gt;
#end

#set ($cerfaNumerique = $doc.getObject('cerfa-numerique.Code.CerfaNumeriqueClass'))
#if ($xcontext.action == 'view')
  #isDemarcheOwner()
  #if ($displayAvisFormOnly)
    #set ($selectedTab = 'avis-tab')
    #set ($isSingleTab = true)
    {{include reference="Demarches.Code.DemarcheAvisFormTab" /}}
  #elseif ($request['view-mode'] == 'statistics' &amp;&amp; $isGuest)
    == $services.localization.render('wikidemarches.demarche.tabs.avisStatistics') ==
    #set ($selectedTab = 'statistics-tab')
    #set ($isSingleTab = true)
    {{include reference="Demarches.Code.DemarcheAvisStatisticsTab" /}}
  #elseif ($displayInvalidKeyMessage)
    {{info}}
    $services.localization.render('wikidemarches.administration.avis.invalid-key')
    {{/info}}
  #elseif ("$!viewMode" == 'cerfa-numerique' &amp;&amp; $cerfaNumerique != $NULL)
    == Critères qualité Cerfa numérique ==
    #set ($selectedTab = 'cerfa-numerique-tab')
    #set ($isSingleTab = true)
    {{include reference="cerfa-numerique.Code.DemarcheCerfaNumeriqueTab" /}}
  #elseif (!$isGuest)
    #set ($selectedTab = "$!request['tab']")
    #if ($request['view-mode'] == 'statistics')
      #set ($selectedTab = 'statistics-tab')
    #elseif ($selectedTab == '')
      #set ($selectedTab = 'demarche-tab')
    #end
    #set ($isSingleTab = false)
    &lt;ul class="nav nav-tabs" id="tabs"&gt;
      &lt;li role="presentation" #if($selectedTab == 'demarche-tab')class="active"#end&gt;&lt;a href="#demarche-tab" role="tab" data-toggle="tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.demarche')&lt;/a&gt;&lt;/li&gt;
      #if ($hasAdmin || $isAdministrateurMinisteriel || $isDemarcheOwner)
        &lt;li role="presentation" #if($selectedTab == 'embed-tab')class="active"#end&gt;&lt;a href="#embed-tab" role="tab" data-toggle="tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.embed')&lt;/a&gt;&lt;/li&gt;
      #end
      #if ($hasAdmin || ($isAdministrateurMinisteriel &amp;&amp; $isInDemarcheDirection) || $isDemarcheOwner)
        &lt;li role="presentation" #if($selectedTab == 'liste-avis-tab')class="active"#end&gt;&lt;a href="#liste-avis-tab" role="tab" data-toggle="tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.avisList')&lt;/a&gt;&lt;/li&gt;
      #end
      &lt;li role="presentation" #if($selectedTab == 'statistics-tab')class="active"#end&gt;&lt;a href="#statistics-tab" role="tab" data-toggle="tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.avisStatistics')&lt;/a&gt;&lt;/li&gt;
      #if ($cerfaNumerique != $NULL)
        &lt;li role="presentation" #if($selectedTab == 'cerfa-numerique-tab')class="active"#end&gt;&lt;a href="#cerfa-numerique-tab" role="tab" data-toggle="tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.cerfaNumerique')&lt;/a&gt;&lt;/li&gt;
      #end
    &lt;/ul&gt;
    &lt;div class="tab-content"&gt;
      {{include reference="Demarches.Code.DemarcheTab" /}}
      #if ($hasAdmin || $isAdministrateurMinisteriel || $isDemarcheOwner)
        {{include reference="Demarches.Code.EmbedTab" /}}
      #end
      #if ($hasAdmin || ($isAdministrateurMinisteriel &amp;&amp; $isInDemarcheDirection) || $isDemarcheOwner)
        {{include reference="Demarches.Code.DemarcheAvisListTab" /}}
      #end
      {{include reference="Demarches.Code.DemarcheAvisStatisticsTab" /}}
      #if ($cerfaNumerique != $NULL)
        {{include reference="cerfa-numerique.Code.DemarcheCerfaNumeriqueTab" /}}
      #end
    &lt;/div&gt;
 #else
   (% style="margin-top: 1em" %)(((
     {{info}}
     #set($loginURL = $xwiki.getURL('XWiki.XWikiLogin', 'login', "xredirect=$escapetool.url($doc.getURL())"))
     $services.localization.render('wd.login-notice')
     [[$services.localization.render('wd.login-button')&gt;&gt;path:$loginURL||class="button"]]
     {{/info}}
    )))
  #end
#elseif ($xcontext.action == 'edit')
  ## There's just one tab, but we need to make it visible.
  #set ($selectedTab = 'demarche-tab')
  {{include reference="Demarches.Code.DemarcheTab" /}}
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>22e95638-c3b9-4493-8cde-dd51185039d5</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery','xwiki-selectize'], function($) {
  'use strict';

  /** Demarche form functions */

  var getSelectizeOptions = function(select) {

   //we want the code below to get executed only when a Demarche gets edited, not when displaying a livetable
   if (select[0].form) {
	   $(select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"]).on('change', function() {
	     console.log("clearing loaded searches...")
	     $('.suggest-propertyValues').clearLoadedSearches();
	   })
   }

   var loadURL = [
      '$request.contextPath', 'rest',
      'wikis', encodeURIComponent(XWiki.currentWiki),
      'classes', encodeURIComponent(select.attr('data-className')),
      'properties', encodeURIComponent(select.attr('data-propertyName')),
      'values'
    ].join('/');

    // Creating new values via a selectized widget is allowed only for properties "groupes" and "organismes de traitement"
    var allowCreate = false;
    var propertyName = select.attr('data-propertyName');
    if (propertyName == 'groupes' || propertyName == 'organismesTraitement') {
      allowCreate = true;
    }

    return {
      create: allowCreate,
      load: function(text, callback) {
        if (select.attr('data-propertyName')=="publics" || select.attr('data-propertyName')=="evenements") {
          //we don't want to change the request URL when we're not editing a Demarche but just browsing a Demarches livetable
          if (select[0].form) {
            var categories = select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"];
            var params = [ categories[0].value + "=" + categories[0].checked,
               categories[1].value + "=" + categories[1].checked,
               categories[2].value + "=" + categories[2].checked,
               categories[3].value + "=" + categories[3].checked].join('&amp;');
            loadURL = [
             '$request.contextPath', 'wiki', encodeURIComponent(XWiki.currentWiki),
             'view/Demarches/Code/DemarchesSuggest?outputSyntax=plain&amp;xpage=plain&amp;' + params + '&amp;property=' + encodeURIComponent(select.attr('data-propertyName'))
            ].join('/');
          }
        }

        $.getJSON(loadURL, {
          'fp': text,
          'limit': 100
        }).then(function(response) {
          if (response &amp;&amp; $.isArray(response.propertyValues)) {
            return response.propertyValues.map(getSuggestion);
          } else {
            return [];
          }
        }).done(callback).fail(callback);
      }
    };
  };

  var getSuggestion = function(propertyValue) {
    var metaData = propertyValue.metaData || {};
    return {
      value: propertyValue.value,
      label: metaData.label,
      icon: metaData.icon,
      url: metaData.url
    };
  };

  $.fn.suggestPropertyValues = function() {
    return this.each(function() {
      $(this).xwikiSelectize(getSelectizeOptions($(this)));
    });
  };

  $.fn.clearLoadedSearches = function() {
    return this.each(function() {
      if ($(this)[0].selectize) {
        var selectize = $(this)[0].selectize;
        selectize.loadedSearches = {};
        //selectize.options = {};
        //selectize.clearOptions();
        var opts = selectize.options;
        for (var value in opts) {
          if (opts.hasOwnProperty(value) &amp;&amp; selectize.items.indexOf(value) == -1) {
            selectize.removeOption(value); 
          }
        }
      }
    });
  };

  $('.suggest-propertyValues').suggestPropertyValues();

  $(document).ready(function() {
    $(".demarche-details-action button").click(function() {
      var btn = $(this);
      btn.parent().toggleClass("expanded");
      $(".demarche-details").toggle("slow");
      btn.attr('aria-expanded', function(index, value) {
        if (value === 'false')
          return 'true';
        return 'false';
      });
      btn.find(".fa").toggleClass("fa-chevron-right").toggleClass("fa-chevron-down");
      var label = btn.find(".demarche-details-action-label");
      if (btn.parent().hasClass("expanded")) {
        label.text("$services.localization.render('wikidemarches.demarche.details-off')");
      } else {
        label.text("$services.localization.render('wikidemarches.demarche.details-on')")
      }
    });

    $('#tabs a').click(function (e) {
      //e.preventDefault();
      $(this).tab('show');
    })

    if(window.location.hash) {
      var hash = decodeURIComponent(window.location.hash);
      var idx = hash.indexOf('|');
      if (idx &gt; 0) {
        hash = hash.substring(0, idx);
      }
      var tab = $('#tabs a[href="' + hash + '"]');
      if (tab &amp;&amp; tab.tab) {
        tab.tab('show') // Select tab by name
      }
    }

    // NB: several functions in this script make sense only in edit mode, the code could possibly get refactored accordingly

  });
});</code>
    </property>
    <property>
      <name>JSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>e7069962-04ad-4763-82bf-226d1a940a3f</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/*
 * This script fixes keyboard navigation accessibility for bootstrap tabs
 * It provides 'ArrowLeft', 'ArrowRight', 'Home' and 'End' key navigation
 * It also make only the current tab focusable using tabindex,
 * and makes tab panel focusable too
 */
require(['jquery'], function($) {
  'use strict';

  const TAB_SELECTOR = '[data-toggle="tab"]';
  const TABPANEL_SELECTOR = '.tab-pane[role="tabpanel"]';

  $(function () {
    /*
     * Utils functions
     */
    const getTabIndex = function ($tabs, tab) {
      return $tabs.toArray().findIndex(function (_tab) {
        return _tab === tab;
      });
    }

    const focusTabAtIndex = function ($tabs, index) {
      const $tab = $tabs.eq(index);
      $tab.tab('show');
      $tab.focus();
    }

    const focusTabLeft = function ($tabs, tab) {
      const tabIndex = getTabIndex($tabs, tab);
      focusTabAtIndex($tabs, tabIndex - 1);
    };

    const focusTabRight = function ($tabs, tab) {
      const tabIndex = getTabIndex($tabs, tab);
      focusTabAtIndex($tabs, (tabIndex + 1) % $tabs.length);
    };

    const focusFirstTab = function ($tabs) {
      focusTabAtIndex($tabs, 0);
    };

    const focusLastTab = function ($tabs) {
      focusTabAtIndex($tabs, -1);
    };

    /*
     * Handle keyboard navigation
     */
    $(TAB_SELECTOR).on('keydown', function (event) {
      const tab = event.currentTarget;
      const $tabs = $(tab)
        .closest('.nav-tabs')
        .find(TAB_SELECTOR);
      let actionFlag = false;

      switch (event.key) {
        case 'ArrowLeft':
          focusTabLeft($tabs, tab);
          actionFlag = true;
          break;

        case 'ArrowRight':
          focusTabRight($tabs, tab);
          actionFlag = true;
          break;

        case 'Home':
          focusFirstTab($tabs);
          actionFlag = true;
          break;

        case 'End':
          focusLastTab($tabs);
          actionFlag = true;
          break;

        default:
          break;
      }

      if (actionFlag) {
        event.preventDefault();
        event.stopPropagation();
      }
    });

    /*
     * Modify tab and tabpanels focusability
     */
    // Make tab panels focusable
    $(TABPANEL_SELECTOR).attr('tabindex', 0);
    // Make only current tab focusable
    $(TAB_SELECTOR).not('.active &gt; ' + TAB_SELECTOR).attr('tabindex', -1);
    $(TAB_SELECTOR).on('show.bs.tab', function (event) {
      $(event.currentTarget).attr('tabindex', 0)
    });
    $(TAB_SELECTOR).on('hide.bs.tab', function (event) {
      $(event.currentTarget).attr('tabindex', -1)
    });
  });
});</code>
    </property>
    <property>
      <name>Tab accessibility</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>c7bdc332-633a-4b30-b949-076e09f3b342</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>
.demarche-details-action {
  padding: 0.7em 0 0 0;
}
.demarche-details {
  display: none;
  dt {
    color: @grey-425;
    font-weight: normal;
    padding-top: 0.5em;
    line-height: 1.3;
  }
  dd {
    line-height: 1.3;
  }
}

.eval-container {
  display: none;
}

.nav-tabs {
  margin-top: 0.5em;
  margin-bottom: 2rem;
}


/** Avoid horizontal scrollbars on demarches due to long URLs. */
.wikigeneratedlinkcontent {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
}

/** Add margin top the docextra tabs 
 * Since now footer is so spaced from the content, for symmetry, so should the docextra. 
 * This is more than the footer's margin because the docextra has some padding inside that makes its bottom spaced 45px away from the footer, 
 * and for symmetry it's better to have the same distance on top and on bottom of the docextra.
 */
#xwikidata {
  margin-top: 1.5 * @grid-gutter-width;
}

/** Demarche tab styles */
#demarche-tab {
  .xform dl dt label {
    /* Apply all known h6 style */
    .h6();
    .dsfr-h6();
    text-transform: none;
  }
  dd.property-value {
    label {
      display: inline-block;
      margin-right: 0.8em;
    }

    .user {
      margin-top: 0.5rem;
      padding-left: 3.5rem;

      .user-avatar-wrapper {
        height: 2.5rem;
        width: 2.5rem;

        img {
          // needed to overwrite existing rules
          max-height: 100%;
          max-width: 100%;
        }
      }
    }
  }
}

form {
  #demarche-tab {
    .xHint {
      margin-bottom: 0.3em;
    }
  }
}


#avis-tab {
  margin-top: 1em;
}

/** Used by the avis statistics tab */
#statistics-tab {
  font-size: 0.9em;

  .lighter {
    color: @grey-425;
  }

  h2 {
    padding-bottom: 0.2em;
    border-bottom: 1px solid #e5e5e5;
  }

  h3 {
    color: #555;
  }

  a.average-help {
    color: @grey-425;
    position: relative;
    font-size: 0.5em;
    top: -0.7em;
    &amp;:focus {
      .outline;
      outline-color: @grey-425;
    }
  }

  .vertical-align {
    display: flex;
    align-items: center;
  }

  .histo {
    height: 300px;
  }

  @media (max-width: 992px) {
    .row.vertical-align {
      display: block;
    }
  }
}
</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>SSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
