<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarchesSheet" locale="">
  <web>Demarches.Code</web>
  <name>DemarchesSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1527081469000</creationDate>
  <parent>DemarchesClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1531383002000</date>
  <contentUpdateDate>1531383002000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Demarches.Code.DemarchesMacros" /}}

{{velocity}}
{{html wiki="true" clean="false"}}
#set ($discard = $xwiki.jsx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $xwiki.ssx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $doc.use('Demarches.Code.DemarchesClass'))

#displaySubTitle()

#set ($selectedTab = "$!request['tab']")
#if ($selectedTab == '')
  #if (!$isGuest)
    #set ($selectedTab = 'demarche-tab')
  #else
    #set ($selectedTab = 'avis-tab')
  #end
#end

## Display tabs only in view mode.
#if ($xcontext.action == 'view')
  &lt;ul class="nav nav-tabs" id="tabs"&gt;
    #if (!$isGuest)
      &lt;li role="presentation" #if($selectedTab == 'demarche-tab')class="active"#end&gt;&lt;a href="#demarche-tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.demarche')&lt;/a&gt;&lt;/li&gt;
      &lt;li role="presentation" #if($selectedTab == 'liste-avis-tab')class="active"#end&gt;&lt;a href="#liste-avis-tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.avisList')&lt;/a&gt;&lt;/li&gt;
    #end
    &lt;li role="presentation" #if($selectedTab == 'avis-tab')class="active"#end&gt;&lt;a href="#avis-tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.avisForm')&lt;/a&gt;&lt;/li&gt;
    &lt;li role="presentation" #if($selectedTab == 'statistics-tab')class="active"#end&gt;&lt;a href="#statistics-tab"&gt;$services.localization.render('wikidemarches.demarche.tabs.avisStatistics')&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
#end

&lt;div class="tab-content"&gt;
  #if (!$isGuest)
    {{include reference="Demarches.Code.DemarcheTab" /}}
    #if ($xcontext.action == 'view')
      {{include reference="Demarches.Code.DemarcheAvisListTab" /}}
    #end
  #end
  #if ($xcontext.action == 'view')
    {{include reference="Demarches.Code.DemarcheAvisFormTab" /}}

    {{include reference="Demarches.Code.DemarcheAvisStatisticsTab" /}}
  #end
&lt;/div&gt;

{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>22e95638-c3b9-4493-8cde-dd51185039d5</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery','xwiki-selectize'], function($) {
  'use strict';

  /** Demarche form functions */

  var getSelectizeOptions = function(select) {

   //we want the code below to get executed only when a Demarche gets edited, not when displaying a livetable
   if (select[0].form) {
	   $(select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"]).on('change', function() {
	     console.log("clearing loaded searches...")
	     $('.suggest-propertyValues').clearLoadedSearches();
	   })
   }

   var loadURL = [
      '$request.contextPath', 'rest',
      'wikis', encodeURIComponent(XWiki.currentWiki),
      'classes', encodeURIComponent(select.attr('data-className')),
      'properties', encodeURIComponent(select.attr('data-propertyName')),
      'values'
    ].join('/');
  return {
      create: false,
      load: function(text, callback) {
        if (select.attr('data-propertyName')=="publics" || select.attr('data-propertyName')=="evenements") {
          //we don't want to change the request URL when we're not editing a Demarche but just browsing a Demarches livetable
          if (select[0].form) {
            var categories = select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"];
            var params = [ categories[0].value + "=" + categories[0].checked,
               categories[1].value + "=" + categories[1].checked,
               categories[2].value + "=" + categories[2].checked,
               categories[3].value + "=" + categories[3].checked].join('&amp;');
            loadURL = [
             '$request.contextPath', 'wiki', encodeURIComponent(XWiki.currentWiki),
             'view/Demarches/Code/DemarchesSuggest?outputSyntax=plain&amp;xpage=plain&amp;' + params + '&amp;property=' + encodeURIComponent(select.attr('data-propertyName'))
            ].join('/');
          }
        }

        $.getJSON(loadURL, {
          'fp': text,
          'limit': 100
        }).then(function(response) {
          if (response &amp;&amp; $.isArray(response.propertyValues)) {
            return response.propertyValues.map(getSuggestion);
          } else {
            return [];
          }
        }).done(callback).fail(callback);
      }
    };
  };

  var getSuggestion = function(propertyValue) {
    var metaData = propertyValue.metaData || {};
    return {
      value: propertyValue.value,
      label: metaData.label,
      icon: metaData.icon,
      url: metaData.url
    };
  };

  $.fn.suggestPropertyValues = function() {
    return this.each(function() {
      $(this).xwikiSelectize(getSelectizeOptions($(this)));
    });
  };

  $.fn.clearLoadedSearches = function() {
    return this.each(function() {
      if ($(this)[0].selectize) {
        var selectize = $(this)[0].selectize;
        selectize.loadedSearches = {};
        //selectize.options = {};
        //selectize.clearOptions();
        var opts = selectize.options;
        for (var value in opts) {
          if (opts.hasOwnProperty(value) &amp;&amp; selectize.items.indexOf(value) == -1) {
            selectize.removeOption(value); 
          }
        }
      }
    });
  };

  $('.suggest-propertyValues').suggestPropertyValues();

  /** Avis functions */
  function updateVoteAndSubmitButton() {
    var modalite = $("input[name='Avis.Code.AvisClass_0_modalite']:checked").val();
    //The "modalite" checkbox can be inexistent in case the form is displayed after a new demarche got submitted by the current user.
    if (!modalite) {
      modalite = $("input[name='Avis.Code.AvisClass_0_modalite']").val();
    }

    var score = $("input[name='Avis.Code.AvisClass_0_score']:checked").val();
    if (score) {
      if (modalite == 'autrement') {
        $('.vote-container').show();
      } else {
        $('.vote-container').hide();
      }
      $('input[type="submit"]').prop('disabled', false);
    }

    var vote = $("input[name='Avis.Code.AvisClass_0_vote']:checked").val();
    if (vote &amp;&amp; vote == 'true' &amp;&amp; modalite == 'autrement') {
      $('.vote-input-container').show();
    } else {
      $('.vote-input-container').hide();
    }
  }

  function updateEvaluationInputsVisibility() {
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "second-form-screen") {
      $('.eval-container').show();
      $('input[type="submit"]').prop('disabled', false);
    }
  }

  function showHideFreeTextInputField(inputElement, propName, freeTextInputFieldId) {
    var value = inputElement.val();
    var checked = inputElement.prop("checked");
    if (value == propName) {
      if (checked) {
        $("#"+freeTextInputFieldId).show();
      } else {
        // Make sure to empty the input before hiding it, so that only an empty
        // value gets sent to the server, no value that the user may have entered
        // before hiding the input.
        $("#"+freeTextInputFieldId).val("");
        $("#"+freeTextInputFieldId).hide();
      }
    }
  }

  $(document).ready(function() {
    $("input[name='Avis.Code.AvisClass_0_modalite']").change(function() {
      updateVoteAndSubmitButton();
    });

    $("input[name='Avis.Code.AvisClass_0_score']").change(function() {
      updateVoteAndSubmitButton();
    });

    $("input[name='Avis.Code.AvisClass_0_vote']").change(function() {
      updateVoteAndSubmitButton();
    });

    // Add an input field allowing the user to enter free text about
    // a difficulty he may have faced when the 'autre difficulté' is checked.
    $("input[name='Avis.Code.AvisClass_0_difficultes']").change(function() {
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreDifficulte-0");
    });

    // Same for 'autre aide'
    $("input[name='Avis.Code.AvisClass_0_aide']").change(function() {
      // Uncheck the 'Aucune aide' checkbox.
      $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreAide-0");
    });

    // Uncheck all other options when 'aucune aide' is checked
    $("input[id='xwiki-form-aide-0-aucune']").change(function() {
      var input = $(this);
      var checked = input.prop("checked");
      if (checked) {
        // Uncheck all other options
        $("input[name='Avis.Code.AvisClass_0_aide']").each(function() {
           var input = $(this);
           var value = input.val();
           input.prop("checked", false);
           // Hide explicitely the "autreAide" field
           // NB: this is not done automatically despite the listener above because
           // the input for 'aucune aide' has no name (as we don't want to store its value
           // in the database).
           $("#xwiki-form-autreAide-0").val("");
           $("#xwiki-form-autreAide-0").hide();
        });
      }
    });

    // The input 'Aucune aide' is checked by default, make sure this is not the case.
    $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);

    updateEvaluationInputsVisibility();

    // For the third form screen, always enable the submit button
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "third-form-screen") {
      $('input[type="submit"]').prop('disabled', false);
    }

    $('#tabs a').click(function (e) {
      //e.preventDefault();
      $(this).tab('show');
    })

    if(window.location.hash) {
      var hash = window.location.hash;
      var tab = $('#tabs a[href="' + hash + '"]');
      if (tab &amp;&amp; tab.tab) {
        tab.tab('show') // Select tab by name
      }
    }

  });
});</code>
    </property>
    <property>
      <name>JSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>c7bdc332-633a-4b30-b949-076e09f3b342</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>/*
 * Remove all distance between document title and content, to make the subtitle appear as subtitle.
 */
.document-header {
  padding-bottom: 0px;
}

.document-header #document-title h1 {
    margin-bottom: 0;
}

/*
 * Add a little padding on desktop, so that it looks nicer
 */
@media (min-width: @screen-md-min) {
  .document-header {
    padding-top: 25px;
  }
}

.eval-container {
  display: none;
}

.vote-container {
  display: none;
}

.vote-input-container {
  display: none;
}

.listclass-group ul {
  list-style-type: none;
  padding-left: 0;
  margin-left: 0;

  .form-listclass-item {
    padding: 0.375em;
  }
}

.wd-form fieldset {
  margin-bottom: 1.5em;
}

.form-preambule {
  margin-bottom: 3em;

  h2 {
    margin: 0;
    font-weight: bold;
  }
}

.subtitle, .info-box-mandatory {
  color: @gray-light;
}

.subtitle + .avis-stats {
  margin-bottom: 1.5em;
}

.nav-tabs {
  margin-top: 0.5em;
  margin-bottom: 1em;
}


/** Avoid horizontal scrollbars on demarches due to long URLs. */
.wikigeneratedlinkcontent {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
}

/** Add margin top the docextra tabs */
#xwikidata {
  margin-top: 1em;
}

.wd-form .buttonwrapper {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  text-align: center;

  input.button[disabled] {
    .btn-default;
    .btn-gradient(lighten(@btn-default-bg, 5%));
    .btn-border(@btn-default-bg);
  }
}

@media (min-width: @screen-md-min) {
  .wd-form .buttonwrapper {
    text-align: left;
  }
}

.radiovote-form-listclass label {
  cursor: default;
}

label.question {
  font-size: 1.20em;
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: 1em;
  line-height: inherit;
  color: #333333;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}

/*
 * Avis score statistics
 */
.avis-stats h2 {
  font-size: 1.0em; /* same size as the text titles */
  margin-top: 0;
}

@bad : @brand-danger;
@medium : @brand-warning;
@good : @brand-success;

.avis-stats-container {
  display: table;
  width: 100%;
  line-height: 1.35;
  .avis-statstrow {
    display: table-row;
    .avis-statsrow-icon , .avis-statstrow-amount , .avis-statstrow-bar {
      display: table-cell;
    }
    .avis-statsrow-icon {
      width: 1.5em;
      text-align: left;
      font-size: 1.2em;
      line-height: 0.1;
    }
    .avis-statstrow-amount {
      width: 3em;
      text-align: left;
      vertical-align: middle;
      .text-smaller();
    }
    .avis-stats-bar {
      display: inline-block;
      background-color: #ccc;
      height: 0.9em;
      vertical-align : middle;
      .text-smaller();
    }
  }
  .avis-statsrow-1 {
    .avis-statsrow-icon {
      color: @bad;
    }
    .avis-stats-bar {
      background-color: @bad;
    }
  }
  .avis-statsrow-2 {
    .avis-statsrow-icon {
      color: @medium;
    }
    .avis-stats-bar {
      background-color: @medium;
    }
  }
  .avis-statsrow-3 {
    .avis-statsrow-icon {
      color: @good;
    }
    .avis-stats-bar {
      background-color: @good;
    }
  }
}

.avis-average-container {
  display: table-row;
  .avis-average-visual, .avis-average-desc {
    display: table-cell;
  }
  .avis-average-visual + .avis-average-desc {
    padding-left: 0.8ex;
  }
  .avis-average-visual {
    .avis-average-balls {
      display: inline-block;
      vertical-align: middle;
      .avis-average-ball {
        display: inline-block;
        width: 1em;
        height: 1em;
        position: relative;
        .avis-average-ballborder {
          display: inline-block;
          border-width: 1px;
          border-style: solid;
          width: 1em;
          height: 1em;
          border-radius: 0.5em;
          position: absolute;
          border-color: @navbar-default-bg;
        }
        .avis-average-ballcolor {
          display: inline-block;
          height: 1em;
          width: 1em;
          border-radius: 0.5em;
          position: absolute;
          border-color: @navbar-default-bg;
          background-color: @navbar-default-bg;
        }
        .avis-average-ballwhite {
          display: inline-block;
          position: absolute;
          right: 0;
          height: 1em;
          background-color: #fff;
        }
      }
    }
  }
}

@averagebar-color : @navbar-default-bg;
.avis-average-container {
  font-size: 80%;
  color: @gray-light;
  a.average-help {
    color: lighten(@gray-light, 25%);
  }
  .avis-average-visual {
    .avis-average-barcontainer {
      display: inline-block;
      vertical-align: middle;
      line-height: 0.5;
      .avis-average-bar,
      .avis-average-barcolor,
      .avis-average-barborder {
        width: 6em;
      }
      .avis-average-barouterborder {
        display: inline-block;
        padding: 0;
        line-height: 0.4;
        border-width: 1px;
        border-style: solid;
        border-color: @averagebar-color;
      }
      .avis-average-bar {
        display: inline-block;
        height: 0.6em;
        position: relative;
        .avis-average-barborder {
          display: inline-block;
          border-width: 1px;
          border-style: solid;
          height: 0.6em;
          position: absolute;
          border-color: @averagebar-color;
        }
        .avis-average-barcolor {
          display: inline-block;
          height: 0.6em;
          position: absolute;
          border-color: @averagebar-color;
          background-color: @averagebar-color;
          /* #gradient &gt; .horizontal-three-colors(@bad; @medium; 50%; @good); */
        }
        .avis-average-barwhite {
          display: inline-block;
          position: absolute;
          right: 0;
          height: 0.6em;
          background-color: #fff;
        }
      }
    }
  }
}

h2 {
  padding-bottom: 0.2em;
  border-bottom: 1px solid #e5e5e5;
}

/** Used by the avis statistics tab */
#statistics-tab {
  font-size: 0.9em;

  .lighter {
    color: #777;
  }

  h3 {
    color: #555;
  }

  a.average-help {
    color: lighten(@gray-light, 25%);
    position: relative;
    font-size: 0.5em;
    top: -0.7em;
  }

  .vertical-align {
    display: flex;
    align-items: center;
  }

  @media (max-width: 768px) {
    .row.vertical-align {
      display: block;
    }
  }
}

</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>SSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
