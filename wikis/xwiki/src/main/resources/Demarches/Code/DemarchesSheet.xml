<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarchesSheet" locale="">
  <web>Demarches.Code</web>
  <name>DemarchesSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1527081469000</creationDate>
  <parent>DemarchesClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1531383002000</date>
  <contentUpdateDate>1531383002000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include document="Demarches.Code.DemarchesMacros" /}}

{{velocity}}
{{html wiki="true"}}
#set ($discard = $xwiki.jsx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $xwiki.ssx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $doc.use('Demarches.Code.DemarchesClass'))

############################# Subtitle / Score #############################
#displaySubTitle()
#displayScoreAverageBar()

############################# Tabs ################################
#if ($xcontext.action == 'view' &amp;&amp; $xcontext.user != 'XWiki.XWikiGuest')
&lt;ul class="nav nav-tabs" id="tabs"&gt;
  &lt;li role="presentation" class="active"&gt;&lt;a href="#demarche-tab"&gt;Démarche&lt;/a&gt;&lt;/li&gt;
    &lt;li role="presentation"&gt;&lt;a href="#liste-avis-tab"&gt;Liste des avis&lt;/a&gt;&lt;/li&gt;
  &lt;li role="presentation"&gt;&lt;a href="#avis-tab"&gt;Formulaire de soumission d'avis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
#end

&lt;div class="tab-content"&gt;
############################# Demarche tab #######################################
#if ($xcontext.user != 'XWiki.XWikiGuest')
&lt;div class="tab-pane fade active in" role="tabpanel" id="demarche-tab" aria-labelledby="demarche-tab"&gt;

#if($xcontext.action == 'edit')
  #set($type="edit")
  &lt;input type="hidden" name="xvalidate" value="1" /&gt;
  &lt;input type="hidden" name="async" value="false" /&gt;
  ## Groovy script to validate empty title or empty direction
  &lt;input type="hidden" name="xvalidation" value="Demarches.Code.ValidationScriptGroovy" /&gt;
#end

#if ($xcontext.validationStatus.errors.size() &gt; 0 || $xcontext.validationStatus.exceptions.size() &gt; 0)

  {{error}}
  $services.localization.render('demarches.validation.error')
  #if ($xcontext.validationStatus.exceptions.size() &gt; 0)
    #foreach ($exception in $xcontext.validationStatus.exceptions)
      $exception
    #end
  #end
  {{/error}}
  
#end
&lt;div class="row"&gt;
&lt;div class="col-lg-6 col-md-6 col-sm-6"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Informations générales&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#if ($xcontext.action != 'view')
  #displayProperty('title1', true)
#end
#if ($xcontext.action == 'view')
&lt;dt&gt;&lt;label&gt;Identifiant&lt;/label&gt;&lt;/dt&gt;
&lt;dd&gt;$doc.name&lt;/dd&gt;
#end
#foreach($propName in ['nomComplet', 'statut', 'formulaires', 'objet', 'ministeres', 'direction', 'groupes', 'organismesTraitement', 'textes', 'identifiantsEli'])
  #set ($mandatory = ($propName == 'direction'))
  #displayProperty($propName, $mandatory)
#end
&lt;/dl&gt;
)))
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Catégorisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['categoriesPublics', 'publics', 'evenements'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
  &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="col-lg-6 col-md-6 col-sm-6"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Volumétrie&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['volumetrie', 'volumetrieDemat', 'pourcentageDemat', 'niveauVolumetrie'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Dématérialisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['niveauDemat', 'dematObligatoire', 'exclusionSve', 'caracteristiquesDemat'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Références&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['referenceBddForm', 'referenceServicePublic'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Adresses web&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['urlInfos', 'urlDemarche', 'urlFiche'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Remarques&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#displayProperty('remarques', false)
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row"&gt;
&lt;div class="col-lg-12 col-md-12 col-sm-12"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Projet de dématérialisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['nomProjet', 'statutProjetDemat', 'dateMiseEnLigne', 'niveauPrevu', 'caracteristiquesDematPrevues'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
##
## Display excel export button if in view mode
#if ($xcontext.action != 'edit')
  #set($discard = $services.localization.use('document', 'Macros.AddExcelExportToLivetableMacroTranslations'))
  #set($discard = $xwiki.ssx.use('Macros.AddExcelExportToLivetableMacro'))
  &lt;form action="$xwiki.getURL('Macros.AddExcelExportToLivetableMacroResultsPage', 'get', 'outputSyntax=plain&amp;transprefix=demarches.livetable.')" method='post'&gt;
    &lt;div class="buttonwrapper xwiki-livetable-tools-excelexport"&gt;
      &lt;input type="hidden" name='classname' value='Demarches.Code.DemarchesClass' /&gt;
      &lt;input type="hidden" name='collist' value='doc.name' /&gt;
      &lt;input type="hidden" name='queryFilters' value='currentlanguage,hidden' /&gt;
      &lt;input type="hidden" name='outputSyntaxType' value='excel' /&gt;
      &lt;input type="hidden" name='limit' value='0' /&gt;
      &lt;input type="hidden" name='withPageName' value='true' /&gt;
      &lt;input type="hidden" name='withPageURL' value='true' /&gt;
      &lt;input type="hidden" name='withAllFields' value='true' /&gt;
      &lt;input type="hidden" name='doc.name' value="${escapetool.xml($doc.name)}" /&gt;
      &lt;input type="hidden" name='excelFilename' value="$escapetool.xml("demarche_${doc.name}_${datetool.get('ddMMyyyyHHmmss')}")" /&gt;
      &lt;button class='button' type='submit' name='exportexcel'&gt;&lt;span class='xwiki-livetable-tools-text'&gt;$services.localization.render('xwiki.macro.exportexcellivetable.title')&lt;/span&gt; &lt;span class='xwiki-livetable-tools-excel' /&gt;&lt;/button&gt;
    &lt;/div&gt;
  &lt;/form&gt;
#end
&lt;/div&gt;
#end
######################## Demarche tab end #########################

######################## Liste avis tab ###################
## Don't dispay the list avis tab when not in view mode
#if ($xcontext.action == 'view' &amp;&amp; $xcontext.user != 'XWiki.XWikiGuest')
  ## Display the list of avis as a tab if in authentified mode
  &lt;div class="tab-pane fade" role="tabpanel" id="liste-avis-tab" aria-labelledby="liste-avis-tab"&gt;
  #set ($extraParams = "demarche=$doc.fullName")
  {{include document="Avis.WebHome" /}}
  &lt;/div&gt;
#end
######################## Liste avis tab end ###################

######################## Avis tab ###################
#maybeSetWarningBackground()
## Display the Avis tab only in view mode. In the other cases, we're only editing a Demarche.
#if ($xcontext.action == 'view')
  ## Display the avis as a tab only if in authentified mode (otherwise there are issues with the fade mode).
  #if ($xcontext.user != 'XWiki.XWikiGuest')
    &lt;div class="tab-pane fade" role="tabpanel" id="avis-tab" aria-labelledby="avis-tab"&gt;
  #end
  (%class='demarche-avis-separator'%)
  ----
  #set ($step = "$!request.session.getAttribute('avis-form-step')")
  
  ## This is a multi-steps form. The following exclusive and successive steps can happen:
  ## - Initial step (key: "initial-step") with or without the modality 'demarche-newly-submitted-by-current-user'
  ## - Second screen (key: "second-form-screen")
  ## - Third form screen (key: "third-form-screen")
  ## - Final step (key: "final-step")
  
  #if ($step == '')
    ## Initialize the step variable for the sake for clarity (i.e. do not leave the initial step empty).
    #set ($step = 'initial-step')
  #end
  #if ($step != 'initial-step')
    ## The step is not the initial one, hence we:
    ## - Retrieve the avis id from the session, in case there is one (when a new demarche just got submitted, there is none, otherwise there should be one).
    ## - Display a message corresponding to the current step, and the message gets cleaned from the session.
    #set ($avisDocId = $request.session.getAttribute('avis-id'))
    #set ($discard = $request.session.removeAttribute('avis-form-step'))
    #displayMessage("avis.form.$step")
  #else
    #set ($modality = "$!request.session.getAttribute('initial-step-modality')")
    #if ($modality == "demarche-newly-submitted-by-current-user")
      #displayMessage("avis.form.initial-step.demarche-newly-submitted-by-current-user")
    #end
    #maybeDisplayStatusWarning()
  #end

  #if ($step != "final-step")
    ## The step is not the last one: we display a form for submitting / completing an avis.
    #set ($demarche = $doc.getObject('Demarches.Code.DemarchesClass'))
    #if ($demarche != $NULL)
      &lt;form action="$xwiki.getDocument('Avis.Code.NewAvisHandler').getURL()" method="POST" class="xform wd-form avis-form"&gt;
      #if ($step == 'initial-step')
        ## The first step of the form gets displayed, either for an existing demarche, or for a demarche that got just submitted by the current user.
        &lt;div class='form-preambule'&gt;
        ==$services.localization.render('avis.invite')==

        &lt;span class="info-box-mandatory small"&gt;$services.localization.render('avis.mandatory-info')&lt;/span&gt;
        &lt;/div&gt;
        #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
        #set ($modality = "$!request.session.getAttribute('initial-step-modality')")
        #set ($presetModalite = "$!request.nd_mode")
        #if ($modality != "demarche-newly-submitted-by-current-user" &amp;&amp; $presetModalite == '')
          ## We're not in the case where the user has just submitted a new demarche, hence we display the 'modalite' question.
          ## We also don't have a preset modalite received from request parameters
          #setDefaultModalite($avis)
          &lt;div class="modalite"&gt;
            #displayObjectForm($avis,['modalite'])
          &lt;/div&gt;
        #else
          #if ($presetModalite != '')
            ## a preset modalite was received on the request, use that modalite
            #set ($modalite = $presetModalite)
          #else
            ## The user has just submitted a new demarche, hence we retrieve the 'modalite' value from the session, and we clean the session from this point of view.
            #set ($modalite = $request.session.getAttribute('avis-modalite'))
            #set ($discard = $request.session.removeAttribute('avis-modalite'))
            #set ($discard = $request.session.removeAttribute('initial-step-modality'))
          #end
          &lt;input type="hidden" name="Avis.Code.AvisClass_0_modalite" value="$modalite" /&gt;
        #end
        &lt;div class="rating-container"&gt;
          #displayObjectForm($avis,['score'])
        &lt;/div&gt;
        &lt;div class="vote-container"&gt;
          #displayObjectForm($avis,['vote'])
        &lt;/div&gt;
      #elseif ($step == 'second-form-screen')
        &lt;div class='form-preambule'&gt;
        ==$services.localization.render('avis.form.second-form-screen.introduction')==
        &lt;/div&gt;
        #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
        &lt;div class="eval-container"&gt;
          #displayObjectForm($avis,['facile','comprehensible','difficultes','aide','autre'])
        &lt;/div&gt;
      #elseif ($step == 'third-form-screen')
        #set ($avis = $doc.newObject('Avis.Code.AvisClass'))
        &lt;div class="email-container"&gt;
          #displayObjectForm($avis,['email'])
        &lt;/div&gt;
      #end
      ## If we're handling a validated demarche, the avis gets associated to it.
      #set ($demarcheId = $doc.fullName)
      &lt;input type="hidden" name="Avis.Code.AvisClass_0_demarche" value="$demarcheId" /&gt;
      &lt;input type="hidden" name="xredirect" value="$doc.getURL()#wd-1|tab=avis" /&gt;
      &lt;input type="hidden" name="avis-form-step" value="$step" /&gt;
      #if ($avisDocId)
        &lt;input type="hidden" name="avis-id" value="$avisDocId" /&gt;
      #end
      #set($avissource = "$!request.nd_source")
      &lt;input type="hidden" name="Avis.Code.AvisClass_0_source" value="$escapetool.xml($avissource)" /&gt;
      &lt;div class='buttonwrapper'&gt;
      #if ($step == 'initial-step')
        #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.validate')))
      #elseif ($step == 'second-form-screen')
        #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.send')))
      #elseif ($step == 'third-form-screen')
        #set ($submitLabel = $escapetool.xml($services.localization.render('avis.form.complete')))
      #end
      &lt;input class="button btn btn-primary" type="submit" name="submit" value="$submitLabel" disabled/&gt;
      &lt;/div&gt;
      &lt;/form&gt;
    #end
  #end
  ## Close the tab created for authenticated users only.
  #if ($xcontext.user != 'XWiki.XWikiGuest')
    &lt;/div&gt;
  #end
#end
############################## Avis tab end ##############################

&lt;/div&gt;

{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>22e95638-c3b9-4493-8cde-dd51185039d5</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery','xwiki-selectize'], function($) {
  'use strict';
 
  /** Demarche form functions */
  
  var getSelectizeOptions = function(select) {

   //we want the code below to get executed only when a Demarche gets edited, not when displaying a livetable
   if (select[0].form) {
	   $(select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"]).on('change', function() {
	     console.log("clearing loaded searches...")
	     $('.suggest-propertyValues').clearLoadedSearches();
	   })
   }

   var loadURL = [
      '$request.contextPath', 'rest',
      'wikis', encodeURIComponent(XWiki.currentWiki),
      'classes', encodeURIComponent(select.attr('data-className')),
      'properties', encodeURIComponent(select.attr('data-propertyName')),
      'values'
    ].join('/');
  return {
      create: true,
      load: function(text, callback) {
        if (select.attr('data-propertyName')=="publics" || select.attr('data-propertyName')=="evenements") {
          //we don't want to change the request URL when we're not editing a Demarche but just browsing a Demarches livetable
          if (select[0].form) {
            var categories = select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"];
            var params = [ categories[0].value + "=" + categories[0].checked,
               categories[1].value + "=" + categories[1].checked,
               categories[2].value + "=" + categories[2].checked,
               categories[3].value + "=" + categories[3].checked].join('&amp;');
            loadURL = [
             '$request.contextPath', 'wiki', encodeURIComponent(XWiki.currentWiki),
             'view/Demarches/Code/DemarchesSuggest?outputSyntax=plain&amp;xpage=plain&amp;' + params + '&amp;property=' + encodeURIComponent(select.attr('data-propertyName'))
            ].join('/');
          }
        } else if (select.attr('data-propertyName')=="ministeres") {
          if (text.indexOf("Ministeres.") &lt; 0)
            text = "Ministeres." + text;
          $('.suggest-propertyValues').clearLoadedSearches();
        }
        
        $.getJSON(loadURL, {
          'fp': text,
          'limit': 100
        }).then(function(response) {
          if (response &amp;&amp; $.isArray(response.propertyValues)) {
            return response.propertyValues.map(getSuggestion);
          } else {
            return [];
          }
        }).done(callback).fail(callback);
      }
    };
  };

  var getSuggestion = function(propertyValue) {
    var metaData = propertyValue.metaData || {};
    return {
      value: propertyValue.value,
      label: metaData.label,
      icon: metaData.icon,
      url: metaData.url
    };
  };

  $.fn.suggestPropertyValues = function() {
    return this.each(function() {
      $(this).xwikiSelectize(getSelectizeOptions($(this)));
    });
  };

  $.fn.clearLoadedSearches = function() {
    return this.each(function() {
      if ($(this)[0].selectize) {
        var selectize = $(this)[0].selectize;
        selectize.loadedSearches = {};
        //selectize.options = {};
        //selectize.clearOptions();
        var opts = selectize.options;
        for (var value in opts) {
          if (opts.hasOwnProperty(value) &amp;&amp; selectize.items.indexOf(value) == -1) {
            selectize.removeOption(value); 
          }
        }        
      }
    });
  };

  $('.suggest-propertyValues').suggestPropertyValues();
  
  /** Avis functions */
  function updateVoteAndSubmitButton() {
    var modalite = $("input[name='Avis.Code.AvisClass_0_modalite']:checked").val();
    //The "modalite" checkbox can be inexistent in case the form is displayed after a new demarche got submitted by the current user.
    if (!modalite)
      modalite = $("input[name='Avis.Code.AvisClass_0_modalite']").val();

    var score = $("input[name='Avis.Code.AvisClass_0_score']:checked").val();
    if (score) {
      if (modalite == 'autrement') {
        $('.vote-container').show();
      } else {
        $('.vote-container').hide();
      }
      $('input[type="submit"]').prop('disabled', false);
    }
  }
  
  function updateEvaluationInputsVisibility() {
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "second-form-screen") {
      $('.eval-container').show();
      $('input[type="submit"]').prop('disabled', false);
    }
  }
  
  function showHideFreeTextInputField(inputElement, propName, freeTextInputFieldId) {
    var value = inputElement.val();
    var checked = inputElement.prop("checked");
    if (value == propName) {
      if (checked) {
        $("#"+freeTextInputFieldId).show();
      } else {
        // Make sure to empty the input before hiding it, so that only an empty
        // value gets sent to the server, no value that the user may have entered
        // before hiding the input.
        $("#"+freeTextInputFieldId).val("");
        $("#"+freeTextInputFieldId).hide();
      }
    } 
  }
    
  $(document).ready(function() {
    $("input[name='Avis.Code.AvisClass_0_modalite']").change(function() {
      updateVoteAndSubmitButton();
    });
    
    $("input[name='Avis.Code.AvisClass_0_score']").change(function() {
      updateVoteAndSubmitButton();
    });
    
    // Add an input field allowing the user to enter free text about
    // a difficulty he may have faced when the 'autre difficulté' is checked.
    $("input[name='Avis.Code.AvisClass_0_difficultes']").change(function() {
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreDifficulte-0");
    });

    // Same for 'autre aide'
    $("input[name='Avis.Code.AvisClass_0_aide']").change(function() {
      // Uncheck the 'Aucune aide' checkbox.
      $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);
      showHideFreeTextInputField($(this), "autre", "xwiki-form-autreAide-0");
    });

    // Uncheck all other options when 'aucune aide' is checked
    $("input[id='xwiki-form-aide-0-aucune']").change(function() {
      var input = $(this);
      var checked = input.prop("checked");
      if (checked) {
        // Uncheck all other options
        $("input[name='Avis.Code.AvisClass_0_aide']").each(function() {
           var input = $(this);
           var value = input.val();
           input.prop("checked", false);
           // Hide explicitely the "autreAide" field
           // NB: this is not done automatically despite the listener above because
           // the input for 'aucune aide' has no name (as we don't want to store its value
           // in the database).
           $("#xwiki-form-autreAide-0").val("");
           $("#xwiki-form-autreAide-0").hide();
        });
      }
    });
    
    // The input 'Aucune aide' is checked by default, make sure this is not the case.
    $("input[id='xwiki-form-aide-0-aucune']").prop("checked", false);
    
    updateEvaluationInputsVisibility();
    
    // For the third form screen, always enable the submit button
    var step = $('input[name="avis-form-step"]').prop('value');
    if (step == "third-form-screen") {
      $('input[type="submit"]').prop('disabled', false);
    }
    
    $('#tabs a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
    })
    
    if(window.location.hash) {
      var hash = window.location.hash;
      if (hash.indexOf('tab=avis') &gt;= 0) {
        var tab = $('#tabs a[href="#avis"]');
        //tabs are not always present: when the user is guest they're not displayed
        if (tab &amp;&amp; tab.tab)
          tab.tab('show')
      }
    } 
    
  });
});</code>
    </property>
    <property>
      <name>JSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>c7bdc332-633a-4b30-b949-076e09f3b342</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>/*
 * Remove all distance between document title and content, to make the subtitle appear as subtitle.
 */
.document-header {
  padding-bottom: 0px;
}

.document-header #document-title h1 {
    margin-bottom: 0;
}

/*
 * Add a little padding on desktop, so that it looks nicer
 */
@media (min-width: @screen-md-min) {
  .document-header {
    padding-top: 25px;
  }
}

.eval-container {
  display: none;
}

.vote-container {
  display: none;
}


.listclass-group ul {
  list-style-type: none;
  padding-left: 0;
  margin-left: 0;

  .form-listclass-item {
    padding: 0.375em;
  }
}

.wd-form fieldset {
  margin-bottom: 1.5em;
}

.form-preambule {
  margin-bottom: 3em;

  h2 {
    margin: 0;
    font-weight: bold;
  }
}

.subtitle, .info-box-mandatory {
  color: @gray-light;
}

.subtitle + .avis-stats {
  margin-bottom: 1.5em;
}

.demarche-avis-separator {
  margin-bottom: 1.5em;
  margin-top: 1.5em;
  /* same as the legend border */
  border-top: 1px solid #e5e5e5;
}

.nav-tabs {
 margin-bottom: 1em;
}


/** Avoid horizontal scrollbars on demarches due to long URLs. */
.wikigeneratedlinkcontent {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
}

/** Add margin top the docextra tabs */
#xwikidata {
  margin-top: 1em;
}

.wd-form .buttonwrapper {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  text-align: center;

  input.button[disabled] {
    .btn-default;
    .btn-gradient(lighten(@btn-default-bg, 5%));
    .btn-border(@btn-default-bg);
  }
}

@media (min-width: @screen-md-min) {
  .wd-form .buttonwrapper {
    text-align: inherit;
  }
}

.radiovote-form-listclass label {
  cursor: default;
}

/*
 * Avis score statistics
 */
.avis-stats h2 {
  font-size: 1.0em; /* same size as the text titles */
  margin-top: 0;
}

@bad : @brand-danger;
@medium : @brand-warning;
@good : @brand-success;

.avis-stats-container {
  display: table;
  width: 100%;
  line-height: 1.35;
  .avis-statstrow {
    display: table-row;
    .avis-statsrow-icon , .avis-statstrow-amount , .avis-statstrow-bar {
      display: table-cell;
    }
    .avis-statsrow-icon {
      width: 1.5em;
      text-align: left;
      font-size: 1.2em;
      line-height: 0.1;
    }
    .avis-statstrow-amount {
      width: 3em;
      text-align: left;
      vertical-align: middle;
      .text-smaller();
    }
    .avis-stats-bar {
      display: inline-block;
      background-color: #ccc;
      height: 0.9em;
      vertical-align : middle;
      .text-smaller();
    }
  }
  .avis-statsrow-1 {
    .avis-statsrow-icon {
      color: @bad;
    }
    .avis-stats-bar {
      background-color: @bad;
    }
  }
  .avis-statsrow-2 {
    .avis-statsrow-icon {
      color: @medium;
    }
    .avis-stats-bar {
      background-color: @medium;
    }
  }
  .avis-statsrow-3 {
    .avis-statsrow-icon {
      color: @good;
    }
    .avis-stats-bar {
      background-color: @good;
    }
  }
}

.avis-average-container {
  display: table-row;
  .avis-average-visual, .avis-average-desc {
    display: table-cell;
  }
  .avis-average-visual + .avis-average-desc {
    padding-left: 0.8ex;
  }
  .avis-average-visual {
    .avis-average-balls {
      display: inline-block;
      vertical-align: middle;
      .avis-average-ball {
        display: inline-block;
        width: 1em;
        height: 1em;
        position: relative;
        .avis-average-ballborder {
          display: inline-block;
          border-width: 1px;
          border-style: solid;
          width: 1em;
          height: 1em;
          border-radius: 0.5em;
          position: absolute;
          border-color: @navbar-default-bg;
        }
        .avis-average-ballcolor {
          display: inline-block;
          height: 1em;
          width: 1em;
          border-radius: 0.5em;
          position: absolute;
          border-color: @navbar-default-bg;
          background-color: @navbar-default-bg;
        }
        .avis-average-ballwhite {
          display: inline-block;
          position: absolute;
          right: 0;
          height: 1em;
          background-color: #fff;
        }
      }
    }
  }
}

@averagebar-color : @navbar-default-bg;
.avis-average-container {
  font-size: 80%;
  color: @gray-light;
  a.average-help {
    color: lighten(@gray-light, 25%);
  }
  .avis-average-visual {
    .avis-average-barcontainer {
      display: inline-block;
      vertical-align: middle;
      line-height: 0.5;
      .avis-average-bar,
      .avis-average-barcolor,
      .avis-average-barborder {
        width: 6em;
      }
      .avis-average-barouterborder {
        display: inline-block;
        padding: 0;
        line-height: 0.4;
        border-width: 1px;
        border-style: solid;
        border-color: @averagebar-color;
      }
      .avis-average-bar {
        display: inline-block;
        height: 0.6em;
        position: relative;
        .avis-average-barborder {
          display: inline-block;
          border-width: 1px;
          border-style: solid;
          height: 0.6em;
          position: absolute;
          border-color: @averagebar-color;
        }
        .avis-average-barcolor {
          display: inline-block;
          height: 0.6em;
          position: absolute;
          border-color: @averagebar-color;
          background-color: @averagebar-color;
          /* #gradient &gt; .horizontal-three-colors(@bad; @medium; 50%; @good); */
        }
        .avis-average-barwhite {
          display: inline-block;
          position: absolute;
          right: 0;
          height: 0.6em;
          background-color: #fff;
        }
      }
    }
  }
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>SSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
