<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.DemarchesSheet" locale="">
  <web>Demarches.Code</web>
  <name>DemarchesSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1526657565000</creationDate>
  <parent>DemarchesClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1528182773000</date>
  <contentUpdateDate>1528182773000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="none"}}
#macro (displayProperty $propName $isMandatory)
  #set ($clazz = $xwiki.getDocument('Demarches.Code.DemarchesClass').xWikiClass)
  #set ($hint = $NULL)
  #set ($isBoolean = false)
  #foreach ($prop in $clazz.properties)
    #if ($prop.name == $propName)
      #set ($hint = $prop.hint)
      #set ($isBoolean = ($prop.type == 'BooleanClass'))
      #set ($isNumber = ($prop.type == 'NumberClass'))
    #end
  #end
  #set ($fieldIsInvalid = false)
  #if ($xcontext.validationStatus.propertyErrors.contains($propName))
    #set($fieldIsInvalid = true)
  #end
  #if ($isBoolean &amp;&amp; $xcontext.action == 'edit')
    &lt;dt&gt;&lt;label#if ($xcontext.action == 'edit') for="Demarches.Code.DemarchesClass_0_${propName}"#end&gt;$doc.display($propName)$doc.displayPrettyName($propName, $isMandatory)&lt;/label&gt;
      #if ($hint)&lt;span class="xHint"&gt;$services.localization.render($hint)&lt;/span&gt;#end  
    &lt;/dt&gt;
  #else
    &lt;dt&gt;&lt;label#if ($xcontext.action == 'edit') for="Demarches.Code.DemarchesClass_0_${propName}"#end&gt;$doc.displayPrettyName($propName, $isMandatory)&lt;/label&gt;
    #if ($hint)&lt;span class="xHint"&gt;$services.localization.render($hint)&lt;/span&gt;#end
  
  #end
  &lt;/dt&gt;
  &lt;dd #if ($fieldIsInvalid)class="validation-failure"#end&gt;
    #if(!$isBoolean || $xcontext.action != 'edit')
      #if ($isNumber &amp;&amp; $doc.getValue($propName))
        #if ($xcontext.action == 'view')
          $numbertool.format('integer', $doc.getValue($propName))
        #else
          $doc.display($propName)
        #end
      #else
        $doc.display($propName)
      #end
    #end
    #if($fieldIsInvalid)
      {{error}}$services.localization.render("Demarches.Code.DemarchesClass_${propName}.validation"){{/error}}
    #end
  &lt;/dd&gt;
#end
{{/velocity}}

{{velocity}}
{{html wiki="true"}}
#set ($discard = $xwiki.jsx.use('Demarches.Code.DemarchesSheet'))
#set ($discard = $xwiki.ssx.use('Demarches.Code.Skin'))
#set ($discard = $doc.use('Demarches.Code.DemarchesClass'))
#if($xcontext.action == 'edit')
  #set($type="edit")
  &lt;input type="hidden" name="xvalidate" value="1" /&gt;
  &lt;input type="hidden" name="async" value="false" /&gt;
  ## Groovy script to validate empty title or empty direction
  &lt;input type="hidden" name="xvalidation" value="Demarches.Code.ValidationScriptGroovy" /&gt;
#end

#if ($xcontext.validationStatus.errors.size() &gt; 0 || $xcontext.validationStatus.exceptions.size() &gt; 0)

  {{error}}
  $services.localization.render('demarches.validation.error')
  #if ($xcontext.validationStatus.exceptions.size() &gt; 0)
    #foreach ($exception in $xcontext.validationStatus.exceptions)
      $exception
    #end
  #end
  {{/error}}
  
#end
&lt;div class="row"&gt;
&lt;div class="col-lg-6 col-md-6 col-sm-6"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Informations générales&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#if ($xcontext.action != 'view')
  #displayProperty('title1', true)
#end
#if ($xcontext.action == 'view')
&lt;dt&gt;&lt;label&gt;Identifiant&lt;/label&gt;&lt;/dt&gt;
&lt;dd&gt;$doc.name&lt;/dd&gt;
#end
#foreach($propName in ['nomComplet', 'statut', 'formulaires', 'objet', 'ministeres', 'direction', 'groupes', 'organismesTraitement', 'textes', 'identifiantsEli'])
  #set ($mandatory = ($propName == 'direction'))
  #displayProperty($propName, $mandatory)
#end
&lt;/dl&gt;
)))
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Catégorisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['categoriesPublics', 'publics', 'evenements'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
  &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="col-lg-6 col-md-6 col-sm-6"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Volumétrie&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['volumetrie', 'volumetrieDemat', 'pourcentageDemat', 'niveauVolumetrie'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Dématérialisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['niveauDemat', 'dematObligatoire', 'exclusionSve', 'caracteristiquesDemat'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Références&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['referenceBddForm', 'referenceServicePublic'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Adresses web&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['urlInfos', 'urlDemarche', 'urlFiche'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Remarques&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#displayProperty('remarques', false)
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="row"&gt;
&lt;div class="col-lg-12 col-md-12 col-sm-12"&gt;
&lt;div class="panel panel-default"&gt;
  &lt;div class="panel-heading"&gt;Projet de dématérialisation&lt;/div&gt;
  &lt;div class="panel-body"&gt;
(% class="xform" %)
(((
&lt;dl&gt;
#foreach($propName in ['nomProjet', 'statutProjetDemat', 'dateMiseEnLigne', 'niveauPrevu', 'caracteristiquesDematPrevues'])
  #displayProperty($propName, false)
#end
&lt;/dl&gt;
)))
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
##
## Display excel export button if in view mode
#if ($xcontext.action != 'edit')
  #set($discard = $services.localization.use('document', 'Macros.AddExcelExportToLivetableMacroTranslations'))
  &lt;form action="$xwiki.getURL('Macros.AddExcelExportToLivetableMacroResultsPage', 'get', 'outputSyntax=plain&amp;transprefix=demarches.livetable.')" method='post'&gt;
    &lt;div class="buttonwrapper xwiki-livetable-tools-excelexport"&gt;
      &lt;input type="hidden" name='classname' value='Demarches.Code.DemarchesClass' /&gt;
      &lt;input type="hidden" name='collist' value='doc.name' /&gt;
      &lt;input type="hidden" name='queryFilters' value='currentlanguage,hidden' /&gt;
      &lt;input type="hidden" name='outputSyntaxType' value='excel' /&gt;
      &lt;input type="hidden" name='limit' value='0' /&gt;
      &lt;input type="hidden" name='withPageName' value='true' /&gt;
      &lt;input type="hidden" name='withPageURL' value='true' /&gt;
      &lt;input type="hidden" name='withAllFields' value='true' /&gt;
      &lt;input type="hidden" name='doc.name' value="${escapetool.xml($doc.name)}" /&gt;
      &lt;input type="hidden" name='excelFilename' value="$escapetool.xml("demarche_${doc.name}_${datetool.get('ddMMyyyyHHmmss')}")" /&gt;
      &lt;button class='button' type='submit' name='exportexcel'&gt;&lt;span class='xwiki-livetable-tools-text'&gt;$services.localization.render('xwiki.macro.exportexcellivetable.title')&lt;/span&gt; &lt;span class='xwiki-livetable-tools-excel' /&gt;&lt;/button&gt;
    &lt;/div&gt;
  &lt;/form&gt;
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Demarches.Code.DemarchesSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>04437620-9ec0-423b-81ae-7d34d52d4dae</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery', 'xwiki-selectize'], function($) {
  'use strict';
 
  var getSelectizeOptions = function(select) {

   $(select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"]).on('change', function() {
     console.log("clearing loaded searches...")
     $('.suggest-propertyValues').clearLoadedSearches();
   })

   var loadURL = [
      '$request.contextPath', 'rest',
      'wikis', encodeURIComponent(XWiki.currentWiki),
      'classes', encodeURIComponent(select.attr('data-className')),
      'properties', encodeURIComponent(select.attr('data-propertyName')),
      'values'
    ].join('/');
  return {
      create: true,
      load: function(text, callback) {
        if (select.attr('data-propertyName')=="publics" || select.attr('data-propertyName')=="evenements") {
         var categories = select[0].form["Demarches.Code.DemarchesClass_0_categoriesPublics"];
         var params = [ categories[0].value + "=" + categories[0].checked,
             categories[1].value + "=" + categories[1].checked,
             categories[2].value + "=" + categories[2].checked,
             categories[3].value + "=" + categories[3].checked].join('&amp;');
         loadURL = [
           '$request.contextPath', 'wiki', encodeURIComponent(XWiki.currentWiki),
           'view/Demarches/Code/DemarchesSuggest?outputSyntax=plain&amp;xpage=plain&amp;' + params + '&amp;property=' + encodeURIComponent(select.attr('data-propertyName'))
         ].join('/');
      }
        
      $.getJSON(loadURL, {
          'fp': text,
          'limit': 100
        }).then(function(response) {
          if (response &amp;&amp; $.isArray(response.propertyValues)) {
            return response.propertyValues.map(getSuggestion);
          } else {
            return [];
          }
        }).done(callback).fail(callback);
      }
    };
  };

  var getSuggestion = function(propertyValue) {
    var metaData = propertyValue.metaData || {};
    return {
      value: propertyValue.value,
      label: metaData.label,
      icon: metaData.icon,
      url: metaData.url
    };
  };

  $.fn.suggestPropertyValues = function() {
    return this.each(function() {
      $(this).xwikiSelectize(getSelectizeOptions($(this)));
    });
  };

  $.fn.clearLoadedSearches = function() {
    return this.each(function() {
      if ($(this)[0].selectize) {
        var selectize = $(this)[0].selectize;
        selectize.loadedSearches = {};
        //selectize.options = {};
        //selectize.clearOptions();
        var opts = selectize.options;
        for (var value in opts) {
          if (opts.hasOwnProperty(value) &amp;&amp; selectize.items.indexOf(value) == -1) {
            selectize.removeOption(value); 
          }
        }        
      }
    });
  };

  $('.suggest-propertyValues').suggestPropertyValues();
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
