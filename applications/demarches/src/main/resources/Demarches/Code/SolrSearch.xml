<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Demarches.Code.SolrSearch" locale="">
  <web>Demarches.Code</web>
  <name>SolrSearch</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1527583057000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1528739344000</date>
  <contentUpdateDate>1528739344000</contentUpdateDate>
  <version>1.1</version>
  <title>SolrSearch</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity output="false"}}
#set ($solrConfig = {
  'queryFields': {
    'DOCUMENT' : 'title^10 property.Demarches.Code.DemarchesClass.nomComplet^8 property.Demarches.Code.DemarchesClass.formulaires^8 property.Demarches.Code.DemarchesClass.objet^8 object.Demarches.Code.DemarchesClass^1'
  },
  'filterQuery': [
    'type:DOCUMENT',
    'class:Demarches.Code.DemarchesClass',
    'wiki:wikidemarches',
    '-name:DemarchesTemplate'
  ],
  'facetFields': [
    'property.Demarches.Code.DemarchesClass.categoriesPublics_string',
    'property.Demarches.Code.DemarchesClass.publics_string',
    'property.Demarches.Code.DemarchesClass.evenements_string'
  ],
  'facetDisplayers': {
    'property.Demarches.Code.DemarchesClass.categoriesPublics_string' : 'Demarches.Code.ListFacet',
    'property.Demarches.Code.DemarchesClass.publics_string' : 'Demarches.Code.ListFacet',
    'property.Demarches.Code.DemarchesClass.evenements_string' : 'Demarches.Code.ListFacet'
  },
  'highlightEnabled' : false
})
## include custom search suggest in the same way as in Main.WebHome
## $searchSuggestConfigHash is computed in the skin, in javascript.vm
#set($discard = $xwiki.jsx.use('Main.CustomSearchSuggestJSX', {'h' : $searchSuggestConfigHash.hashCode()}))
{{/velocity}}

{{include reference="Main.SolrSearchConfig" /}}

{{include reference="Main.SolrSearchMacros" /}}

{{include reference="Demarches.Code.SolrSearchMacros" /}}

{{velocity output="false"}}

##override the displayResults macro to remove location, author, highlight
#macro (displaySearchResult_document $searchResult)
  #displaySearchResultTitle()
#end

##override the displaySearchResultsSort macro to remove the highlight, facet and sort options
#macro (displaySearchResultsSort)
#end

##override displaySearchFacets in order to hide the facet actions
#macro (displaySearchFacets $searchResponse)
  #set($void = $services.progress.startStep('#displaySearchFacets'))
  (% class="search-facets collapsed-xs xform" %)(((
    (% class="search-facets-header" %)(((
      **{{translation key="solr.facets.title"/}}** (% class="pull-right visible-xs" %)$services.icon.render('search-plus')

      (% class="xHint" %)
      {{translation key="solr.facets.hint"/}}
    )))
    {{html clean="false"}}
      #foreach ($facetField in $searchResponse.facetFields)
        #displaySearchFacet($facetField)
      #end
    {{/html}}
  )))
  #set($void = $services.progress.endStep())
#end

##override the displaySearchFacet macro so that the facets are unfolded by default
#macro (displaySearchFacet $facetField)
  #set ($facetRequestParameter = "f_$facetField.name")
  #set ($facetRequestValues = $request.getParameterValues($facetRequestParameter))
  #set ($facetValues = [])
  #foreach ($facetValue in $facetField.values)
    ## Keep only the values that have at least one match or that are specified on the request.
    #if ($facetValue.count &gt; 0 || ($facetRequestValues &amp;&amp; $facetRequestValues.contains($facetValue.name)))
      #set ($discard = $facetValues.add($facetValue))
    #end
  #end
  ## Facets that perform a 'facet.prefix'-based drill down (see https://wiki.apache.org/solr/HierarchicalFaceting) don't
  ## have any values (not even with 0 count) when the prefix specified on the request doesn't have any "sub-values", but
  ## we still want to display them to allow the user to reset the filter.
  #if ($facetValues.size() &gt; 0 || $facetRequestValues)
    ## Show active facets (that have selected values or that have an explicit limit on the number of values, i.e.
    ## pagination) as expanded. Collapse the rest, otherwise you have to scroll to see all the available facets.
    #set ($facetValuesLimit = $request.getParameter("l_$facetField.name"))
    &lt;div class="search-facet expanded" data-name="$facetField.name"&gt;
      #displaySearchFacetHeader($facetField)
      #displaySearchFacetBody($facetField)
    &lt;/div&gt;
  #end
#end

##override displaySearchForm in order to add the class "withsearchsuggest-input" to the search input so that
##the field provides live suggestion like on the home page
#macro (displaySearchForm)
  #set($void = $services.progress.startStep('#displaySearchForm'))
  {{html clean="false"}}
  &lt;form class="search-form row" action="$doc.getURL()" role="search"&gt;
    &lt;div class="hidden"&gt;
      &lt;input type="hidden" name="sort" value="$!escapetool.xml($sort)"/&gt;
      &lt;input type="hidden" name="sortOrder" value="$!escapetool.xml($sortOrder)"/&gt;
      &lt;input type="hidden" name="highlight" value="$highlightEnabled"/&gt;
      &lt;input type="hidden" name="facet" value="$facetEnabled"/&gt;
      ## The parameter used to determine if the request has been redirected with default search filters.
      &lt;input type="hidden" name="r" value="$!escapetool.xml($request.r)"/&gt;
      #if ("$!request.debug" != '')
        &lt;input type="hidden" name="debug" value="$escapetool.xml($request.debug)"/&gt;
      #end
      ## Preserve the current facet values when submitting a new search query.
      #foreach ($entry in $request.parameterMap.entrySet())
        #if ($entry.key.startsWith('f_') || $entry.key.startsWith('l_'))
          #foreach ($value in $entry.value)
            &lt;input type="hidden" name="$escapetool.xml($entry.key)" value="$escapetool.xml($value)"/&gt;
          #end
        #end
      #end
    &lt;/div&gt;
    &lt;div class="col-xs-12 col-sm-6"&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="search" name="text" class="form-control withTip useTitleAsTip withsearchsuggest-input"
          title="$services.localization.render('search.page.bar.query.title')" value="$escapetool.xml($text)"/&gt;
        &lt;span class="input-group-btn"&gt;
          &lt;button type="submit" class="btn btn-primary"&gt;
            $services.icon.renderHTML('search')
            &lt;span class="sr-only"&gt;$services.localization.render('search.page.bar.submit')&lt;/span&gt;
          &lt;/button&gt;
        &lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
  #set($void = $services.progress.endStep())
#end

## override get search results to explicitly add url matching to the query, for the 3 url fields
#macro (getSearchResults)
  #set($queryString = '')
  #prepareSolrDemarchesQuery($text, $queryString)
  ##
  ## Create the query and set the query string.
  #set ($query = $services.query.createQuery($queryString, 'solr'))
  ##
  ## Set query parameters.
  #set ($discard = $query.setLimit($rows))
  #set ($discard = $query.setOffset($start))
  #set ($discard = $query.bindValue('sort', "${sort} ${sortOrder}"))
  #setQueryFields($query)
  #setFacetFields($query)
  #setFilterQuery($query)
  #setHighlightQuery($query)
  #if ($debug)
    #set ($discard = $query.bindValue('debugQuery', 'on'))
  #end
  ##
  ## Execute the query.
  #set ($searchResponse = $query.execute()[0])
#end
{{/velocity}}

{{velocity}}
  #handleSolrSearchRequest
{{/velocity}}</content>
</xwikidoc>
